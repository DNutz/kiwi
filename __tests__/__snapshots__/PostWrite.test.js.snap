// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: PostWrite renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostWrite
    open={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        undefined,
        <Dialog
          autoDetectWindowHeight={false}
          autoScrollBodyContent={false}
          bodyStyle={
            Object {
              "padding": 0,
            }
          }
          contentStyle={
            Object {
              "maxWidth": "530px",
              "width": "",
            }
          }
          id={0}
          modal={false}
          onRequestClose={undefined}
          open={true}
          overlayStyle={
            Object {
              "background": "rgba(0,0,0,0.12)",
            }
          }
          repositionOnUpdate={true}
        >
          <ListItem
            autoGenerateNestedIndicator={true}
            containerElement="span"
            disableKeyboardFocus={false}
            disabled={true}
            initiallyOpen={false}
            insetChildren={false}
            leftAvatar={
              <Connect(UserAvatar)
                fileName={undefined}
                fullName={undefined}
                size={40}
              />
            }
            nestedItems={Array []}
            nestedLevel={0}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onNestedListToggle={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            open={null}
            primaryText={
              <div>
                <span
                  style={
                    Object {
                      "fontSize": "16px",
                      "overflow": "hidden",
                      "textOverflow": "ellipsis",
                    }
                  }
                />
              </div>
            }
            primaryTogglesNestedList={false}
            rightIconButton={
              <IconMenu
                anchorOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                animated={true}
                iconButtonElement={
                  <IconButton
                    disableTouchRipple={false}
                    disabled={false}
                    iconStyle={Object {}}
                    tooltipPosition="bottom-left"
                    touch={true}
                  >
                    <NavigationMoreVert
                      color="#bdbdbd"
                    />
                  </IconButton>
                }
                multiple={false}
                onClick={[Function]}
                onItemTouchTap={[Function]}
                onKeyboardFocus={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onRequestChange={[Function]}
                open={null}
                style={
                  Object {
                    "transform": "rotate(90deg)",
                  }
                }
                targetOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                touchTapCloseDelay={200}
                useLayerForClickAway={false}
              >
                <MenuItem
                  anchorOrigin={
                    Object {
                      "horizontal": "right",
                      "vertical": "top",
                    }
                  }
                  checked={false}
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  insetChildren={false}
                  onClick={[Function]}
                  style={
                    Object {
                      "fontSize": "14px",
                    }
                  }
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                >
                  Disable comments
                   
                </MenuItem>
                <MenuItem
                  anchorOrigin={
                    Object {
                      "horizontal": "right",
                      "vertical": "top",
                    }
                  }
                  checked={false}
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  insetChildren={false}
                  onClick={[Function]}
                  style={
                    Object {
                      "fontSize": "14px",
                    }
                  }
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                >
                  Disable sharing
                </MenuItem>
              </IconMenu>
            }
            secondaryTextLines={1}
            styles={
              Object {
                "padding": "16px 4px 30px 16px",
              }
            }
          />
          <div
            style={
              Object {
                "display": "flex",
                "flexDirection": "column",
                "flexGrow": 1,
                "overflow": "hidden",
              }
            }
          >
            <div
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "column",
                  "flexGrow": 1,
                  "maxHeight": "300px",
                  "overflow": "hidden",
                  "overflowY": "auto",
                  "position": "relative",
                }
              }
            >
              <TextField
                disabled={false}
                floatingLabelFixed={false}
                fullWidth={false}
                hintStyle={
                  Object {
                    "fontSize": "16px",
                  }
                }
                hintText="What is new with you?"
                multiLine={true}
                onChange={[Function]}
                rows={1}
                style={
                  Object {
                    "flexGrow": 1,
                    "flexShrink": 0,
                    "margin": "0 16px",
                    "width": "initial",
                  }
                }
                textareaStyle={
                  Object {
                    "fontSize": "16px",
                  }
                }
                type="text"
                underlineShow={false}
                value=""
              />
              
            </div>
            <div
              style={
                Object {
                  "boxFlex": 0,
                  "flexGrow": 0,
                  "flexShrink": 0,
                  "maxHeight": "48px",
                  "width": "100%",
                }
              }
            >
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <div
                  onClick={[Function]}
                  style={
                    Object {
                      "border": 0,
                      "borderRadius": "50%",
                      "display": "inlineBlock",
                      "height": "48px",
                      "outline": "none",
                      "overflow": "hidden",
                      "position": "relative",
                      "textAlign": "center",
                      "transition": "background .3s",
                      "width": "48px",
                      "zIndex": 0,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "cursor": "pointer",
                        "position": "relative",
                        "top": "13px",
                      }
                    }
                  >
                    <ImagePhotoCamera
                      color="grey"
                    />
                  </span>
                </div>
                <div>
                  <FlatButton
                    disabled={false}
                    fullWidth={false}
                    keyboardFocused={false}
                    label="Cancel"
                    labelPosition="after"
                    labelStyle={Object {}}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    onTouchTap={undefined}
                    primary={true}
                    secondary={false}
                    style={
                      Object {
                        "color": "#424242",
                      }
                    }
                  />
                  <FlatButton
                    disabled={true}
                    fullWidth={false}
                    keyboardFocused={false}
                    label="POST"
                    labelPosition="after"
                    labelStyle={Object {}}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    onTouchTap={[Function]}
                    primary={true}
                    secondary={false}
                  />
                </div>
              </div>
            </div>
          </div>
        </Dialog>,
        <Dialog
          actions={
            Array [
              <FlatButton
                disabled={false}
                fullWidth={false}
                keyboardFocused={false}
                label="Cancel"
                labelPosition="after"
                labelStyle={Object {}}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                onTouchTap={[Function]}
                primary={true}
                secondary={false}
                style={
                  Object {
                    "color": "#424242",
                  }
                }
              />,
            ]
          }
          autoDetectWindowHeight={false}
          autoScrollBodyContent={false}
          contentStyle={
            Object {
              "maxWidth": "530px",
              "width": "",
            }
          }
          modal={false}
          onRequestClose={[Function]}
          open={false}
          repositionOnUpdate={true}
        >
          <Connect(ImageGallery)
            close={[Function]}
            set={[Function]}
          />
        </Dialog>,
      ],
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoDetectWindowHeight": false,
          "autoScrollBodyContent": false,
          "bodyStyle": Object {
            "padding": 0,
          },
          "children": Array [
            <ListItem
              autoGenerateNestedIndicator={true}
              containerElement="span"
              disableKeyboardFocus={false}
              disabled={true}
              initiallyOpen={false}
              insetChildren={false}
              leftAvatar={
                <Connect(UserAvatar)
                  fileName={undefined}
                  fullName={undefined}
                  size={40}
                />
              }
              nestedItems={Array []}
              nestedLevel={0}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onNestedListToggle={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              open={null}
              primaryText={
                <div>
                  <span
                    style={
                      Object {
                        "fontSize": "16px",
                        "overflow": "hidden",
                        "textOverflow": "ellipsis",
                      }
                    }
                  />
                </div>
              }
              primaryTogglesNestedList={false}
              rightIconButton={
                <IconMenu
                  anchorOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  animated={true}
                  iconButtonElement={
                    <IconButton
                      disableTouchRipple={false}
                      disabled={false}
                      iconStyle={Object {}}
                      tooltipPosition="bottom-left"
                      touch={true}
                    >
                      <NavigationMoreVert
                        color="#bdbdbd"
                      />
                    </IconButton>
                  }
                  multiple={false}
                  onClick={[Function]}
                  onItemTouchTap={[Function]}
                  onKeyboardFocus={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onRequestChange={[Function]}
                  open={null}
                  style={
                    Object {
                      "transform": "rotate(90deg)",
                    }
                  }
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  touchTapCloseDelay={200}
                  useLayerForClickAway={false}
                >
                  <MenuItem
                    anchorOrigin={
                      Object {
                        "horizontal": "right",
                        "vertical": "top",
                      }
                    }
                    checked={false}
                    desktop={false}
                    disabled={false}
                    focusState="none"
                    insetChildren={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "fontSize": "14px",
                      }
                    }
                    targetOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                  >
                    Disable comments
                     
                  </MenuItem>
                  <MenuItem
                    anchorOrigin={
                      Object {
                        "horizontal": "right",
                        "vertical": "top",
                      }
                    }
                    checked={false}
                    desktop={false}
                    disabled={false}
                    focusState="none"
                    insetChildren={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "fontSize": "14px",
                      }
                    }
                    targetOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                  >
                    Disable sharing
                  </MenuItem>
                </IconMenu>
              }
              secondaryTextLines={1}
              styles={
                Object {
                  "padding": "16px 4px 30px 16px",
                }
              }
            />,
            <div
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "column",
                  "flexGrow": 1,
                  "overflow": "hidden",
                }
              }
            >
              <div
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "maxHeight": "300px",
                    "overflow": "hidden",
                    "overflowY": "auto",
                    "position": "relative",
                  }
                }
              >
                <TextField
                  disabled={false}
                  floatingLabelFixed={false}
                  fullWidth={false}
                  hintStyle={
                    Object {
                      "fontSize": "16px",
                    }
                  }
                  hintText="What is new with you?"
                  multiLine={true}
                  onChange={[Function]}
                  rows={1}
                  style={
                    Object {
                      "flexGrow": 1,
                      "flexShrink": 0,
                      "margin": "0 16px",
                      "width": "initial",
                    }
                  }
                  textareaStyle={
                    Object {
                      "fontSize": "16px",
                    }
                  }
                  type="text"
                  underlineShow={false}
                  value=""
                />
                
              </div>
              <div
                style={
                  Object {
                    "boxFlex": 0,
                    "flexGrow": 0,
                    "flexShrink": 0,
                    "maxHeight": "48px",
                    "width": "100%",
                  }
                }
              >
                <div
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    }
                  }
                >
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "border": 0,
                        "borderRadius": "50%",
                        "display": "inlineBlock",
                        "height": "48px",
                        "outline": "none",
                        "overflow": "hidden",
                        "position": "relative",
                        "textAlign": "center",
                        "transition": "background .3s",
                        "width": "48px",
                        "zIndex": 0,
                      }
                    }
                  >
                    <span
                      style={
                        Object {
                          "cursor": "pointer",
                          "position": "relative",
                          "top": "13px",
                        }
                      }
                    >
                      <ImagePhotoCamera
                        color="grey"
                      />
                    </span>
                  </div>
                  <div>
                    <FlatButton
                      disabled={false}
                      fullWidth={false}
                      keyboardFocused={false}
                      label="Cancel"
                      labelPosition="after"
                      labelStyle={Object {}}
                      onKeyboardFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      onTouchTap={undefined}
                      primary={true}
                      secondary={false}
                      style={
                        Object {
                          "color": "#424242",
                        }
                      }
                    />
                    <FlatButton
                      disabled={true}
                      fullWidth={false}
                      keyboardFocused={false}
                      label="POST"
                      labelPosition="after"
                      labelStyle={Object {}}
                      onKeyboardFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      onTouchTap={[Function]}
                      primary={true}
                      secondary={false}
                    />
                  </div>
                </div>
              </div>
            </div>,
          ],
          "contentStyle": Object {
            "maxWidth": "530px",
            "width": "",
          },
          "id": 0,
          "modal": false,
          "onRequestClose": undefined,
          "open": true,
          "overlayStyle": Object {
            "background": "rgba(0,0,0,0.12)",
          },
          "repositionOnUpdate": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autoGenerateNestedIndicator": true,
              "containerElement": "span",
              "disableKeyboardFocus": false,
              "disabled": true,
              "initiallyOpen": false,
              "insetChildren": false,
              "leftAvatar": <Connect(UserAvatar)
                fileName={undefined}
                fullName={undefined}
                size={40}
              />,
              "nestedItems": Array [],
              "nestedLevel": 0,
              "onKeyboardFocus": [Function],
              "onMouseEnter": [Function],
              "onMouseLeave": [Function],
              "onNestedListToggle": [Function],
              "onTouchEnd": [Function],
              "onTouchStart": [Function],
              "open": null,
              "primaryText": <div>
                <span
                  style={
                    Object {
                      "fontSize": "16px",
                      "overflow": "hidden",
                      "textOverflow": "ellipsis",
                    }
                  }
                />
              </div>,
              "primaryTogglesNestedList": false,
              "rightIconButton": <IconMenu
                anchorOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                animated={true}
                iconButtonElement={
                  <IconButton
                    disableTouchRipple={false}
                    disabled={false}
                    iconStyle={Object {}}
                    tooltipPosition="bottom-left"
                    touch={true}
                  >
                    <NavigationMoreVert
                      color="#bdbdbd"
                    />
                  </IconButton>
                }
                multiple={false}
                onClick={[Function]}
                onItemTouchTap={[Function]}
                onKeyboardFocus={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onRequestChange={[Function]}
                open={null}
                style={
                  Object {
                    "transform": "rotate(90deg)",
                  }
                }
                targetOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                touchTapCloseDelay={200}
                useLayerForClickAway={false}
              >
                <MenuItem
                  anchorOrigin={
                    Object {
                      "horizontal": "right",
                      "vertical": "top",
                    }
                  }
                  checked={false}
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  insetChildren={false}
                  onClick={[Function]}
                  style={
                    Object {
                      "fontSize": "14px",
                    }
                  }
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                >
                  Disable comments
                   
                </MenuItem>
                <MenuItem
                  anchorOrigin={
                    Object {
                      "horizontal": "right",
                      "vertical": "top",
                    }
                  }
                  checked={false}
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  insetChildren={false}
                  onClick={[Function]}
                  style={
                    Object {
                      "fontSize": "14px",
                    }
                  }
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                >
                  Disable sharing
                </MenuItem>
              </IconMenu>,
              "secondaryTextLines": 1,
              "styles": Object {
                "padding": "16px 4px 30px 16px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  style={
                    Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "flexGrow": 1,
                      "maxHeight": "300px",
                      "overflow": "hidden",
                      "overflowY": "auto",
                      "position": "relative",
                    }
                  }
                >
                  <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    fullWidth={false}
                    hintStyle={
                      Object {
                        "fontSize": "16px",
                      }
                    }
                    hintText="What is new with you?"
                    multiLine={true}
                    onChange={[Function]}
                    rows={1}
                    style={
                      Object {
                        "flexGrow": 1,
                        "flexShrink": 0,
                        "margin": "0 16px",
                        "width": "initial",
                      }
                    }
                    textareaStyle={
                      Object {
                        "fontSize": "16px",
                      }
                    }
                    type="text"
                    underlineShow={false}
                    value=""
                  />
                  
                </div>,
                <div
                  style={
                    Object {
                      "boxFlex": 0,
                      "flexGrow": 0,
                      "flexShrink": 0,
                      "maxHeight": "48px",
                      "width": "100%",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "border": 0,
                          "borderRadius": "50%",
                          "display": "inlineBlock",
                          "height": "48px",
                          "outline": "none",
                          "overflow": "hidden",
                          "position": "relative",
                          "textAlign": "center",
                          "transition": "background .3s",
                          "width": "48px",
                          "zIndex": 0,
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "cursor": "pointer",
                            "position": "relative",
                            "top": "13px",
                          }
                        }
                      >
                        <ImagePhotoCamera
                          color="grey"
                        />
                      </span>
                    </div>
                    <div>
                      <FlatButton
                        disabled={false}
                        fullWidth={false}
                        keyboardFocused={false}
                        label="Cancel"
                        labelPosition="after"
                        labelStyle={Object {}}
                        onKeyboardFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        onTouchTap={undefined}
                        primary={true}
                        secondary={false}
                        style={
                          Object {
                            "color": "#424242",
                          }
                        }
                      />
                      <FlatButton
                        disabled={true}
                        fullWidth={false}
                        keyboardFocused={false}
                        label="POST"
                        labelPosition="after"
                        labelStyle={Object {}}
                        onKeyboardFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        onTouchTap={[Function]}
                        primary={true}
                        secondary={false}
                      />
                    </div>
                  </div>
                </div>,
              ],
              "style": Object {
                "display": "flex",
                "flexDirection": "column",
                "flexGrow": 1,
                "overflow": "hidden",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <TextField
                      disabled={false}
                      floatingLabelFixed={false}
                      fullWidth={false}
                      hintStyle={
                        Object {
                          "fontSize": "16px",
                        }
                      }
                      hintText="What is new with you?"
                      multiLine={true}
                      onChange={[Function]}
                      rows={1}
                      style={
                        Object {
                          "flexGrow": 1,
                          "flexShrink": 0,
                          "margin": "0 16px",
                          "width": "initial",
                        }
                      }
                      textareaStyle={
                        Object {
                          "fontSize": "16px",
                        }
                      }
                      type="text"
                      underlineShow={false}
                      value=""
                    />,
                    "",
                  ],
                  "style": Object {
                    "display": "flex",
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "maxHeight": "300px",
                    "overflow": "hidden",
                    "overflowY": "auto",
                    "position": "relative",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": false,
                      "floatingLabelFixed": false,
                      "fullWidth": false,
                      "hintStyle": Object {
                        "fontSize": "16px",
                      },
                      "hintText": "What is new with you?",
                      "multiLine": true,
                      "onChange": [Function],
                      "rows": 1,
                      "style": Object {
                        "flexGrow": 1,
                        "flexShrink": 0,
                        "margin": "0 16px",
                        "width": "initial",
                      },
                      "textareaStyle": Object {
                        "fontSize": "16px",
                      },
                      "type": "text",
                      "underlineShow": false,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "",
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "border": 0,
                          "borderRadius": "50%",
                          "display": "inlineBlock",
                          "height": "48px",
                          "outline": "none",
                          "overflow": "hidden",
                          "position": "relative",
                          "textAlign": "center",
                          "transition": "background .3s",
                          "width": "48px",
                          "zIndex": 0,
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "cursor": "pointer",
                            "position": "relative",
                            "top": "13px",
                          }
                        }
                      >
                        <ImagePhotoCamera
                          color="grey"
                        />
                      </span>
                    </div>
                    <div>
                      <FlatButton
                        disabled={false}
                        fullWidth={false}
                        keyboardFocused={false}
                        label="Cancel"
                        labelPosition="after"
                        labelStyle={Object {}}
                        onKeyboardFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        onTouchTap={undefined}
                        primary={true}
                        secondary={false}
                        style={
                          Object {
                            "color": "#424242",
                          }
                        }
                      />
                      <FlatButton
                        disabled={true}
                        fullWidth={false}
                        keyboardFocused={false}
                        label="POST"
                        labelPosition="after"
                        labelStyle={Object {}}
                        onKeyboardFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        onTouchTap={[Function]}
                        primary={true}
                        secondary={false}
                      />
                    </div>
                  </div>,
                  "style": Object {
                    "boxFlex": 0,
                    "flexGrow": 0,
                    "flexShrink": 0,
                    "maxHeight": "48px",
                    "width": "100%",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "border": 0,
                            "borderRadius": "50%",
                            "display": "inlineBlock",
                            "height": "48px",
                            "outline": "none",
                            "overflow": "hidden",
                            "position": "relative",
                            "textAlign": "center",
                            "transition": "background .3s",
                            "width": "48px",
                            "zIndex": 0,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "cursor": "pointer",
                              "position": "relative",
                              "top": "13px",
                            }
                          }
                        >
                          <ImagePhotoCamera
                            color="grey"
                          />
                        </span>
                      </div>,
                      <div>
                        <FlatButton
                          disabled={false}
                          fullWidth={false}
                          keyboardFocused={false}
                          label="Cancel"
                          labelPosition="after"
                          labelStyle={Object {}}
                          onKeyboardFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onTouchStart={[Function]}
                          onTouchTap={undefined}
                          primary={true}
                          secondary={false}
                          style={
                            Object {
                              "color": "#424242",
                            }
                          }
                        />
                        <FlatButton
                          disabled={true}
                          fullWidth={false}
                          keyboardFocused={false}
                          label="POST"
                          labelPosition="after"
                          labelStyle={Object {}}
                          onKeyboardFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onTouchStart={[Function]}
                          onTouchTap={[Function]}
                          primary={true}
                          secondary={false}
                        />
                      </div>,
                    ],
                    "style": Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <span
                          style={
                            Object {
                              "cursor": "pointer",
                              "position": "relative",
                              "top": "13px",
                            }
                          }
                        >
                          <ImagePhotoCamera
                            color="grey"
                          />
                        </span>,
                        "onClick": [Function],
                        "style": Object {
                          "border": 0,
                          "borderRadius": "50%",
                          "display": "inlineBlock",
                          "height": "48px",
                          "outline": "none",
                          "overflow": "hidden",
                          "position": "relative",
                          "textAlign": "center",
                          "transition": "background .3s",
                          "width": "48px",
                          "zIndex": 0,
                        },
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <ImagePhotoCamera
                            color="grey"
                          />,
                          "style": Object {
                            "cursor": "pointer",
                            "position": "relative",
                            "top": "13px",
                          },
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "color": "grey",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "span",
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <FlatButton
                            disabled={false}
                            fullWidth={false}
                            keyboardFocused={false}
                            label="Cancel"
                            labelPosition="after"
                            labelStyle={Object {}}
                            onKeyboardFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTouchStart={[Function]}
                            onTouchTap={undefined}
                            primary={true}
                            secondary={false}
                            style={
                              Object {
                                "color": "#424242",
                              }
                            }
                          />,
                          <FlatButton
                            disabled={true}
                            fullWidth={false}
                            keyboardFocused={false}
                            label="POST"
                            labelPosition="after"
                            labelStyle={Object {}}
                            onKeyboardFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTouchStart={[Function]}
                            onTouchTap={[Function]}
                            primary={true}
                            secondary={false}
                          />,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "cancel",
                          "nodeType": "class",
                          "props": Object {
                            "disabled": false,
                            "fullWidth": false,
                            "keyboardFocused": false,
                            "label": "Cancel",
                            "labelPosition": "after",
                            "labelStyle": Object {},
                            "onKeyboardFocus": [Function],
                            "onMouseEnter": [Function],
                            "onMouseLeave": [Function],
                            "onTouchStart": [Function],
                            "onTouchTap": undefined,
                            "primary": true,
                            "secondary": false,
                            "style": Object {
                              "color": "#424242",
                            },
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "post",
                          "nodeType": "class",
                          "props": Object {
                            "disabled": true,
                            "fullWidth": false,
                            "keyboardFocused": false,
                            "label": "POST",
                            "labelPosition": "after",
                            "labelStyle": Object {},
                            "onKeyboardFocus": [Function],
                            "onMouseEnter": [Function],
                            "onMouseLeave": [Function],
                            "onTouchStart": [Function],
                            "onTouchTap": [Function],
                            "primary": true,
                            "secondary": false,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "actions": Array [
            <FlatButton
              disabled={false}
              fullWidth={false}
              keyboardFocused={false}
              label="Cancel"
              labelPosition="after"
              labelStyle={Object {}}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              onTouchTap={[Function]}
              primary={true}
              secondary={false}
              style={
                Object {
                  "color": "#424242",
                }
              }
            />,
          ],
          "autoDetectWindowHeight": false,
          "autoScrollBodyContent": false,
          "children": <Connect(ImageGallery)
            close={[Function]}
            set={[Function]}
          />,
          "contentStyle": Object {
            "maxWidth": "530px",
            "width": "",
          },
          "modal": false,
          "onRequestClose": [Function],
          "open": false,
          "repositionOnUpdate": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "close": [Function],
            "set": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <Dialog
            autoDetectWindowHeight={false}
            autoScrollBodyContent={false}
            bodyStyle={
              Object {
                "padding": 0,
              }
            }
            contentStyle={
              Object {
                "maxWidth": "530px",
                "width": "",
              }
            }
            id={0}
            modal={false}
            onRequestClose={undefined}
            open={true}
            overlayStyle={
              Object {
                "background": "rgba(0,0,0,0.12)",
              }
            }
            repositionOnUpdate={true}
          >
            <ListItem
              autoGenerateNestedIndicator={true}
              containerElement="span"
              disableKeyboardFocus={false}
              disabled={true}
              initiallyOpen={false}
              insetChildren={false}
              leftAvatar={
                <Connect(UserAvatar)
                  fileName={undefined}
                  fullName={undefined}
                  size={40}
                />
              }
              nestedItems={Array []}
              nestedLevel={0}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onNestedListToggle={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              open={null}
              primaryText={
                <div>
                  <span
                    style={
                      Object {
                        "fontSize": "16px",
                        "overflow": "hidden",
                        "textOverflow": "ellipsis",
                      }
                    }
                  />
                </div>
              }
              primaryTogglesNestedList={false}
              rightIconButton={
                <IconMenu
                  anchorOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  animated={true}
                  iconButtonElement={
                    <IconButton
                      disableTouchRipple={false}
                      disabled={false}
                      iconStyle={Object {}}
                      tooltipPosition="bottom-left"
                      touch={true}
                    >
                      <NavigationMoreVert
                        color="#bdbdbd"
                      />
                    </IconButton>
                  }
                  multiple={false}
                  onClick={[Function]}
                  onItemTouchTap={[Function]}
                  onKeyboardFocus={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onRequestChange={[Function]}
                  open={null}
                  style={
                    Object {
                      "transform": "rotate(90deg)",
                    }
                  }
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  touchTapCloseDelay={200}
                  useLayerForClickAway={false}
                >
                  <MenuItem
                    anchorOrigin={
                      Object {
                        "horizontal": "right",
                        "vertical": "top",
                      }
                    }
                    checked={false}
                    desktop={false}
                    disabled={false}
                    focusState="none"
                    insetChildren={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "fontSize": "14px",
                      }
                    }
                    targetOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                  >
                    Disable comments
                     
                  </MenuItem>
                  <MenuItem
                    anchorOrigin={
                      Object {
                        "horizontal": "right",
                        "vertical": "top",
                      }
                    }
                    checked={false}
                    desktop={false}
                    disabled={false}
                    focusState="none"
                    insetChildren={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "fontSize": "14px",
                      }
                    }
                    targetOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                  >
                    Disable sharing
                  </MenuItem>
                </IconMenu>
              }
              secondaryTextLines={1}
              styles={
                Object {
                  "padding": "16px 4px 30px 16px",
                }
              }
            />
            <div
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "column",
                  "flexGrow": 1,
                  "overflow": "hidden",
                }
              }
            >
              <div
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "maxHeight": "300px",
                    "overflow": "hidden",
                    "overflowY": "auto",
                    "position": "relative",
                  }
                }
              >
                <TextField
                  disabled={false}
                  floatingLabelFixed={false}
                  fullWidth={false}
                  hintStyle={
                    Object {
                      "fontSize": "16px",
                    }
                  }
                  hintText="What is new with you?"
                  multiLine={true}
                  onChange={[Function]}
                  rows={1}
                  style={
                    Object {
                      "flexGrow": 1,
                      "flexShrink": 0,
                      "margin": "0 16px",
                      "width": "initial",
                    }
                  }
                  textareaStyle={
                    Object {
                      "fontSize": "16px",
                    }
                  }
                  type="text"
                  underlineShow={false}
                  value=""
                />
                
              </div>
              <div
                style={
                  Object {
                    "boxFlex": 0,
                    "flexGrow": 0,
                    "flexShrink": 0,
                    "maxHeight": "48px",
                    "width": "100%",
                  }
                }
              >
                <div
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    }
                  }
                >
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "border": 0,
                        "borderRadius": "50%",
                        "display": "inlineBlock",
                        "height": "48px",
                        "outline": "none",
                        "overflow": "hidden",
                        "position": "relative",
                        "textAlign": "center",
                        "transition": "background .3s",
                        "width": "48px",
                        "zIndex": 0,
                      }
                    }
                  >
                    <span
                      style={
                        Object {
                          "cursor": "pointer",
                          "position": "relative",
                          "top": "13px",
                        }
                      }
                    >
                      <ImagePhotoCamera
                        color="grey"
                      />
                    </span>
                  </div>
                  <div>
                    <FlatButton
                      disabled={false}
                      fullWidth={false}
                      keyboardFocused={false}
                      label="Cancel"
                      labelPosition="after"
                      labelStyle={Object {}}
                      onKeyboardFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      onTouchTap={undefined}
                      primary={true}
                      secondary={false}
                      style={
                        Object {
                          "color": "#424242",
                        }
                      }
                    />
                    <FlatButton
                      disabled={true}
                      fullWidth={false}
                      keyboardFocused={false}
                      label="POST"
                      labelPosition="after"
                      labelStyle={Object {}}
                      onKeyboardFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      onTouchTap={[Function]}
                      primary={true}
                      secondary={false}
                    />
                  </div>
                </div>
              </div>
            </div>
          </Dialog>,
          <Dialog
            actions={
              Array [
                <FlatButton
                  disabled={false}
                  fullWidth={false}
                  keyboardFocused={false}
                  label="Cancel"
                  labelPosition="after"
                  labelStyle={Object {}}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onTouchStart={[Function]}
                  onTouchTap={[Function]}
                  primary={true}
                  secondary={false}
                  style={
                    Object {
                      "color": "#424242",
                    }
                  }
                />,
              ]
            }
            autoDetectWindowHeight={false}
            autoScrollBodyContent={false}
            contentStyle={
              Object {
                "maxWidth": "530px",
                "width": "",
              }
            }
            modal={false}
            onRequestClose={[Function]}
            open={false}
            repositionOnUpdate={true}
          >
            <Connect(ImageGallery)
              close={[Function]}
              set={[Function]}
            />
          </Dialog>,
        ],
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoDetectWindowHeight": false,
            "autoScrollBodyContent": false,
            "bodyStyle": Object {
              "padding": 0,
            },
            "children": Array [
              <ListItem
                autoGenerateNestedIndicator={true}
                containerElement="span"
                disableKeyboardFocus={false}
                disabled={true}
                initiallyOpen={false}
                insetChildren={false}
                leftAvatar={
                  <Connect(UserAvatar)
                    fileName={undefined}
                    fullName={undefined}
                    size={40}
                  />
                }
                nestedItems={Array []}
                nestedLevel={0}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onNestedListToggle={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                open={null}
                primaryText={
                  <div>
                    <span
                      style={
                        Object {
                          "fontSize": "16px",
                          "overflow": "hidden",
                          "textOverflow": "ellipsis",
                        }
                      }
                    />
                  </div>
                }
                primaryTogglesNestedList={false}
                rightIconButton={
                  <IconMenu
                    anchorOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                    animated={true}
                    iconButtonElement={
                      <IconButton
                        disableTouchRipple={false}
                        disabled={false}
                        iconStyle={Object {}}
                        tooltipPosition="bottom-left"
                        touch={true}
                      >
                        <NavigationMoreVert
                          color="#bdbdbd"
                        />
                      </IconButton>
                    }
                    multiple={false}
                    onClick={[Function]}
                    onItemTouchTap={[Function]}
                    onKeyboardFocus={[Function]}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onRequestChange={[Function]}
                    open={null}
                    style={
                      Object {
                        "transform": "rotate(90deg)",
                      }
                    }
                    targetOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                    touchTapCloseDelay={200}
                    useLayerForClickAway={false}
                  >
                    <MenuItem
                      anchorOrigin={
                        Object {
                          "horizontal": "right",
                          "vertical": "top",
                        }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      onClick={[Function]}
                      style={
                        Object {
                          "fontSize": "14px",
                        }
                      }
                      targetOrigin={
                        Object {
                          "horizontal": "left",
                          "vertical": "top",
                        }
                      }
                    >
                      Disable comments
                       
                    </MenuItem>
                    <MenuItem
                      anchorOrigin={
                        Object {
                          "horizontal": "right",
                          "vertical": "top",
                        }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      onClick={[Function]}
                      style={
                        Object {
                          "fontSize": "14px",
                        }
                      }
                      targetOrigin={
                        Object {
                          "horizontal": "left",
                          "vertical": "top",
                        }
                      }
                    >
                      Disable sharing
                    </MenuItem>
                  </IconMenu>
                }
                secondaryTextLines={1}
                styles={
                  Object {
                    "padding": "16px 4px 30px 16px",
                  }
                }
              />,
              <div
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "column",
                    "flexGrow": 1,
                    "overflow": "hidden",
                  }
                }
              >
                <div
                  style={
                    Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "flexGrow": 1,
                      "maxHeight": "300px",
                      "overflow": "hidden",
                      "overflowY": "auto",
                      "position": "relative",
                    }
                  }
                >
                  <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    fullWidth={false}
                    hintStyle={
                      Object {
                        "fontSize": "16px",
                      }
                    }
                    hintText="What is new with you?"
                    multiLine={true}
                    onChange={[Function]}
                    rows={1}
                    style={
                      Object {
                        "flexGrow": 1,
                        "flexShrink": 0,
                        "margin": "0 16px",
                        "width": "initial",
                      }
                    }
                    textareaStyle={
                      Object {
                        "fontSize": "16px",
                      }
                    }
                    type="text"
                    underlineShow={false}
                    value=""
                  />
                  
                </div>
                <div
                  style={
                    Object {
                      "boxFlex": 0,
                      "flexGrow": 0,
                      "flexShrink": 0,
                      "maxHeight": "48px",
                      "width": "100%",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "border": 0,
                          "borderRadius": "50%",
                          "display": "inlineBlock",
                          "height": "48px",
                          "outline": "none",
                          "overflow": "hidden",
                          "position": "relative",
                          "textAlign": "center",
                          "transition": "background .3s",
                          "width": "48px",
                          "zIndex": 0,
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "cursor": "pointer",
                            "position": "relative",
                            "top": "13px",
                          }
                        }
                      >
                        <ImagePhotoCamera
                          color="grey"
                        />
                      </span>
                    </div>
                    <div>
                      <FlatButton
                        disabled={false}
                        fullWidth={false}
                        keyboardFocused={false}
                        label="Cancel"
                        labelPosition="after"
                        labelStyle={Object {}}
                        onKeyboardFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        onTouchTap={undefined}
                        primary={true}
                        secondary={false}
                        style={
                          Object {
                            "color": "#424242",
                          }
                        }
                      />
                      <FlatButton
                        disabled={true}
                        fullWidth={false}
                        keyboardFocused={false}
                        label="POST"
                        labelPosition="after"
                        labelStyle={Object {}}
                        onKeyboardFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        onTouchTap={[Function]}
                        primary={true}
                        secondary={false}
                      />
                    </div>
                  </div>
                </div>
              </div>,
            ],
            "contentStyle": Object {
              "maxWidth": "530px",
              "width": "",
            },
            "id": 0,
            "modal": false,
            "onRequestClose": undefined,
            "open": true,
            "overlayStyle": Object {
              "background": "rgba(0,0,0,0.12)",
            },
            "repositionOnUpdate": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoGenerateNestedIndicator": true,
                "containerElement": "span",
                "disableKeyboardFocus": false,
                "disabled": true,
                "initiallyOpen": false,
                "insetChildren": false,
                "leftAvatar": <Connect(UserAvatar)
                  fileName={undefined}
                  fullName={undefined}
                  size={40}
                />,
                "nestedItems": Array [],
                "nestedLevel": 0,
                "onKeyboardFocus": [Function],
                "onMouseEnter": [Function],
                "onMouseLeave": [Function],
                "onNestedListToggle": [Function],
                "onTouchEnd": [Function],
                "onTouchStart": [Function],
                "open": null,
                "primaryText": <div>
                  <span
                    style={
                      Object {
                        "fontSize": "16px",
                        "overflow": "hidden",
                        "textOverflow": "ellipsis",
                      }
                    }
                  />
                </div>,
                "primaryTogglesNestedList": false,
                "rightIconButton": <IconMenu
                  anchorOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  animated={true}
                  iconButtonElement={
                    <IconButton
                      disableTouchRipple={false}
                      disabled={false}
                      iconStyle={Object {}}
                      tooltipPosition="bottom-left"
                      touch={true}
                    >
                      <NavigationMoreVert
                        color="#bdbdbd"
                      />
                    </IconButton>
                  }
                  multiple={false}
                  onClick={[Function]}
                  onItemTouchTap={[Function]}
                  onKeyboardFocus={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onRequestChange={[Function]}
                  open={null}
                  style={
                    Object {
                      "transform": "rotate(90deg)",
                    }
                  }
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  touchTapCloseDelay={200}
                  useLayerForClickAway={false}
                >
                  <MenuItem
                    anchorOrigin={
                      Object {
                        "horizontal": "right",
                        "vertical": "top",
                      }
                    }
                    checked={false}
                    desktop={false}
                    disabled={false}
                    focusState="none"
                    insetChildren={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "fontSize": "14px",
                      }
                    }
                    targetOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                  >
                    Disable comments
                     
                  </MenuItem>
                  <MenuItem
                    anchorOrigin={
                      Object {
                        "horizontal": "right",
                        "vertical": "top",
                      }
                    }
                    checked={false}
                    desktop={false}
                    disabled={false}
                    focusState="none"
                    insetChildren={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "fontSize": "14px",
                      }
                    }
                    targetOrigin={
                      Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
                    }
                  >
                    Disable sharing
                  </MenuItem>
                </IconMenu>,
                "secondaryTextLines": 1,
                "styles": Object {
                  "padding": "16px 4px 30px 16px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    style={
                      Object {
                        "display": "flex",
                        "flexDirection": "column",
                        "flexGrow": 1,
                        "maxHeight": "300px",
                        "overflow": "hidden",
                        "overflowY": "auto",
                        "position": "relative",
                      }
                    }
                  >
                    <TextField
                      disabled={false}
                      floatingLabelFixed={false}
                      fullWidth={false}
                      hintStyle={
                        Object {
                          "fontSize": "16px",
                        }
                      }
                      hintText="What is new with you?"
                      multiLine={true}
                      onChange={[Function]}
                      rows={1}
                      style={
                        Object {
                          "flexGrow": 1,
                          "flexShrink": 0,
                          "margin": "0 16px",
                          "width": "initial",
                        }
                      }
                      textareaStyle={
                        Object {
                          "fontSize": "16px",
                        }
                      }
                      type="text"
                      underlineShow={false}
                      value=""
                    />
                    
                  </div>,
                  <div
                    style={
                      Object {
                        "boxFlex": 0,
                        "flexGrow": 0,
                        "flexShrink": 0,
                        "maxHeight": "48px",
                        "width": "100%",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "border": 0,
                            "borderRadius": "50%",
                            "display": "inlineBlock",
                            "height": "48px",
                            "outline": "none",
                            "overflow": "hidden",
                            "position": "relative",
                            "textAlign": "center",
                            "transition": "background .3s",
                            "width": "48px",
                            "zIndex": 0,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "cursor": "pointer",
                              "position": "relative",
                              "top": "13px",
                            }
                          }
                        >
                          <ImagePhotoCamera
                            color="grey"
                          />
                        </span>
                      </div>
                      <div>
                        <FlatButton
                          disabled={false}
                          fullWidth={false}
                          keyboardFocused={false}
                          label="Cancel"
                          labelPosition="after"
                          labelStyle={Object {}}
                          onKeyboardFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onTouchStart={[Function]}
                          onTouchTap={undefined}
                          primary={true}
                          secondary={false}
                          style={
                            Object {
                              "color": "#424242",
                            }
                          }
                        />
                        <FlatButton
                          disabled={true}
                          fullWidth={false}
                          keyboardFocused={false}
                          label="POST"
                          labelPosition="after"
                          labelStyle={Object {}}
                          onKeyboardFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onTouchStart={[Function]}
                          onTouchTap={[Function]}
                          primary={true}
                          secondary={false}
                        />
                      </div>
                    </div>
                  </div>,
                ],
                "style": Object {
                  "display": "flex",
                  "flexDirection": "column",
                  "flexGrow": 1,
                  "overflow": "hidden",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <TextField
                        disabled={false}
                        floatingLabelFixed={false}
                        fullWidth={false}
                        hintStyle={
                          Object {
                            "fontSize": "16px",
                          }
                        }
                        hintText="What is new with you?"
                        multiLine={true}
                        onChange={[Function]}
                        rows={1}
                        style={
                          Object {
                            "flexGrow": 1,
                            "flexShrink": 0,
                            "margin": "0 16px",
                            "width": "initial",
                          }
                        }
                        textareaStyle={
                          Object {
                            "fontSize": "16px",
                          }
                        }
                        type="text"
                        underlineShow={false}
                        value=""
                      />,
                      "",
                    ],
                    "style": Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "flexGrow": 1,
                      "maxHeight": "300px",
                      "overflow": "hidden",
                      "overflowY": "auto",
                      "position": "relative",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "disabled": false,
                        "floatingLabelFixed": false,
                        "fullWidth": false,
                        "hintStyle": Object {
                          "fontSize": "16px",
                        },
                        "hintText": "What is new with you?",
                        "multiLine": true,
                        "onChange": [Function],
                        "rows": 1,
                        "style": Object {
                          "flexGrow": 1,
                          "flexShrink": 0,
                          "margin": "0 16px",
                          "width": "initial",
                        },
                        "textareaStyle": Object {
                          "fontSize": "16px",
                        },
                        "type": "text",
                        "underlineShow": false,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "",
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "border": 0,
                            "borderRadius": "50%",
                            "display": "inlineBlock",
                            "height": "48px",
                            "outline": "none",
                            "overflow": "hidden",
                            "position": "relative",
                            "textAlign": "center",
                            "transition": "background .3s",
                            "width": "48px",
                            "zIndex": 0,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "cursor": "pointer",
                              "position": "relative",
                              "top": "13px",
                            }
                          }
                        >
                          <ImagePhotoCamera
                            color="grey"
                          />
                        </span>
                      </div>
                      <div>
                        <FlatButton
                          disabled={false}
                          fullWidth={false}
                          keyboardFocused={false}
                          label="Cancel"
                          labelPosition="after"
                          labelStyle={Object {}}
                          onKeyboardFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onTouchStart={[Function]}
                          onTouchTap={undefined}
                          primary={true}
                          secondary={false}
                          style={
                            Object {
                              "color": "#424242",
                            }
                          }
                        />
                        <FlatButton
                          disabled={true}
                          fullWidth={false}
                          keyboardFocused={false}
                          label="POST"
                          labelPosition="after"
                          labelStyle={Object {}}
                          onKeyboardFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onTouchStart={[Function]}
                          onTouchTap={[Function]}
                          primary={true}
                          secondary={false}
                        />
                      </div>
                    </div>,
                    "style": Object {
                      "boxFlex": 0,
                      "flexGrow": 0,
                      "flexShrink": 0,
                      "maxHeight": "48px",
                      "width": "100%",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "border": 0,
                              "borderRadius": "50%",
                              "display": "inlineBlock",
                              "height": "48px",
                              "outline": "none",
                              "overflow": "hidden",
                              "position": "relative",
                              "textAlign": "center",
                              "transition": "background .3s",
                              "width": "48px",
                              "zIndex": 0,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "cursor": "pointer",
                                "position": "relative",
                                "top": "13px",
                              }
                            }
                          >
                            <ImagePhotoCamera
                              color="grey"
                            />
                          </span>
                        </div>,
                        <div>
                          <FlatButton
                            disabled={false}
                            fullWidth={false}
                            keyboardFocused={false}
                            label="Cancel"
                            labelPosition="after"
                            labelStyle={Object {}}
                            onKeyboardFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTouchStart={[Function]}
                            onTouchTap={undefined}
                            primary={true}
                            secondary={false}
                            style={
                              Object {
                                "color": "#424242",
                              }
                            }
                          />
                          <FlatButton
                            disabled={true}
                            fullWidth={false}
                            keyboardFocused={false}
                            label="POST"
                            labelPosition="after"
                            labelStyle={Object {}}
                            onKeyboardFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            onTouchStart={[Function]}
                            onTouchTap={[Function]}
                            primary={true}
                            secondary={false}
                          />
                        </div>,
                      ],
                      "style": Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <span
                            style={
                              Object {
                                "cursor": "pointer",
                                "position": "relative",
                                "top": "13px",
                              }
                            }
                          >
                            <ImagePhotoCamera
                              color="grey"
                            />
                          </span>,
                          "onClick": [Function],
                          "style": Object {
                            "border": 0,
                            "borderRadius": "50%",
                            "display": "inlineBlock",
                            "height": "48px",
                            "outline": "none",
                            "overflow": "hidden",
                            "position": "relative",
                            "textAlign": "center",
                            "transition": "background .3s",
                            "width": "48px",
                            "zIndex": 0,
                          },
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <ImagePhotoCamera
                              color="grey"
                            />,
                            "style": Object {
                              "cursor": "pointer",
                              "position": "relative",
                              "top": "13px",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "color": "grey",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "span",
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <FlatButton
                              disabled={false}
                              fullWidth={false}
                              keyboardFocused={false}
                              label="Cancel"
                              labelPosition="after"
                              labelStyle={Object {}}
                              onKeyboardFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onTouchStart={[Function]}
                              onTouchTap={undefined}
                              primary={true}
                              secondary={false}
                              style={
                                Object {
                                  "color": "#424242",
                                }
                              }
                            />,
                            <FlatButton
                              disabled={true}
                              fullWidth={false}
                              keyboardFocused={false}
                              label="POST"
                              labelPosition="after"
                              labelStyle={Object {}}
                              onKeyboardFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onTouchStart={[Function]}
                              onTouchTap={[Function]}
                              primary={true}
                              secondary={false}
                            />,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "cancel",
                            "nodeType": "class",
                            "props": Object {
                              "disabled": false,
                              "fullWidth": false,
                              "keyboardFocused": false,
                              "label": "Cancel",
                              "labelPosition": "after",
                              "labelStyle": Object {},
                              "onKeyboardFocus": [Function],
                              "onMouseEnter": [Function],
                              "onMouseLeave": [Function],
                              "onTouchStart": [Function],
                              "onTouchTap": undefined,
                              "primary": true,
                              "secondary": false,
                              "style": Object {
                                "color": "#424242",
                              },
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": "post",
                            "nodeType": "class",
                            "props": Object {
                              "disabled": true,
                              "fullWidth": false,
                              "keyboardFocused": false,
                              "label": "POST",
                              "labelPosition": "after",
                              "labelStyle": Object {},
                              "onKeyboardFocus": [Function],
                              "onMouseEnter": [Function],
                              "onMouseLeave": [Function],
                              "onTouchStart": [Function],
                              "onTouchTap": [Function],
                              "primary": true,
                              "secondary": false,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "actions": Array [
              <FlatButton
                disabled={false}
                fullWidth={false}
                keyboardFocused={false}
                label="Cancel"
                labelPosition="after"
                labelStyle={Object {}}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                onTouchTap={[Function]}
                primary={true}
                secondary={false}
                style={
                  Object {
                    "color": "#424242",
                  }
                }
              />,
            ],
            "autoDetectWindowHeight": false,
            "autoScrollBodyContent": false,
            "children": <Connect(ImageGallery)
              close={[Function]}
              set={[Function]}
            />,
            "contentStyle": Object {
              "maxWidth": "530px",
              "width": "",
            },
            "modal": false,
            "onRequestClose": [Function],
            "open": false,
            "repositionOnUpdate": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "close": [Function],
              "set": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
