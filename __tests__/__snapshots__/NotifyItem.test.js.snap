// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: NotifyItem renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotifyItem
    url="mockURL"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="avatar"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            onClick={[Function]}
            to="/undefined"
          >
            <Connect(UserAvatar)
              fileName={undefined}
              fullName={undefined}
            />
          </NavLink>
        </div>,
        <div
          className="info"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            onClick={[Function]}
            to="mockURL"
          >
            <div
              className="user-name"
            />
            <div
              className="description"
            />
          </NavLink>
        </div>,
        <div
          className="close"
          onClick={[Function]}
        >
          <NavigationClose
            hoverColor="#bdbdbd"
            style={
              Object {
                "cursor": "pointer",
              }
            }
          />
        </div>,
      ],
      "className": "item",
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <NavLink
            activeClassName="active"
            ariaCurrent="true"
            onClick={[Function]}
            to="/undefined"
          >
            <Connect(UserAvatar)
              fileName={undefined}
              fullName={undefined}
            />
          </NavLink>,
          "className": "avatar",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": <Connect(UserAvatar)
              fileName={undefined}
              fullName={undefined}
            />,
            "onClick": [Function],
            "to": "/undefined",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fileName": undefined,
              "fullName": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <NavLink
            activeClassName="active"
            ariaCurrent="true"
            onClick={[Function]}
            to="mockURL"
          >
            <div
              className="user-name"
            />
            <div
              className="description"
            />
          </NavLink>,
          "className": "info",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": Array [
              <div
                className="user-name"
              />,
              <div
                className="description"
              />,
            ],
            "onClick": [Function],
            "to": "mockURL",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "user-name",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "description",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <NavigationClose
            hoverColor="#bdbdbd"
            style={
              Object {
                "cursor": "pointer",
              }
            }
          />,
          "className": "close",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "hoverColor": "#bdbdbd",
            "style": Object {
              "cursor": "pointer",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="avatar"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              onClick={[Function]}
              to="/undefined"
            >
              <Connect(UserAvatar)
                fileName={undefined}
                fullName={undefined}
              />
            </NavLink>
          </div>,
          <div
            className="info"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              onClick={[Function]}
              to="mockURL"
            >
              <div
                className="user-name"
              />
              <div
                className="description"
              />
            </NavLink>
          </div>,
          <div
            className="close"
            onClick={[Function]}
          >
            <NavigationClose
              hoverColor="#bdbdbd"
              style={
                Object {
                  "cursor": "pointer",
                }
              }
            />
          </div>,
        ],
        "className": "item",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavLink
              activeClassName="active"
              ariaCurrent="true"
              onClick={[Function]}
              to="/undefined"
            >
              <Connect(UserAvatar)
                fileName={undefined}
                fullName={undefined}
              />
            </NavLink>,
            "className": "avatar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": <Connect(UserAvatar)
                fileName={undefined}
                fullName={undefined}
              />,
              "onClick": [Function],
              "to": "/undefined",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fileName": undefined,
                "fullName": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavLink
              activeClassName="active"
              ariaCurrent="true"
              onClick={[Function]}
              to="mockURL"
            >
              <div
                className="user-name"
              />
              <div
                className="description"
              />
            </NavLink>,
            "className": "info",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": Array [
                <div
                  className="user-name"
                />,
                <div
                  className="description"
                />,
              ],
              "onClick": [Function],
              "to": "mockURL",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "user-name",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "description",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavigationClose
              hoverColor="#bdbdbd"
              style={
                Object {
                  "cursor": "pointer",
                }
              }
            />,
            "className": "close",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "hoverColor": "#bdbdbd",
              "style": Object {
                "cursor": "pointer",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
