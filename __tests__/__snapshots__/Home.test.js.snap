// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: Home renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(HomeHeader)
          sidebar={[Function]}
          sidebarStatus={true}
          uid={undefined}
        />,
        <Connect(Sidebar)
          open={[Function]}
          overlay={[Function]}
          status={[Function]}
        >
          <SidebarMain>
            <Switch>
              <Route
                path="/people/:tab?"
                render={[Function]}
              />
              <Route
                path="/tag/:tag"
                render={[Function]}
              />
              <Route
                component={[Function]}
                path="/:userId/posts/:postId/:tag?"
              />
              <Route
                component={[Function]}
                path="/:userId"
              />
              <Route
                path="/"
                render={[Function]}
              />
            </Switch>
          </SidebarMain>
        </Connect(Sidebar)>,
      ],
      "id": "home",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "sidebar": [Function],
          "sidebarStatus": true,
          "uid": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <SidebarMain>
            <Switch>
              <Route
                path="/people/:tab?"
                render={[Function]}
              />
              <Route
                path="/tag/:tag"
                render={[Function]}
              />
              <Route
                component={[Function]}
                path="/:userId/posts/:postId/:tag?"
              />
              <Route
                component={[Function]}
                path="/:userId"
              />
              <Route
                path="/"
                render={[Function]}
              />
            </Switch>
          </SidebarMain>,
          "open": [Function],
          "overlay": [Function],
          "status": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Switch>
              <Route
                path="/people/:tab?"
                render={[Function]}
              />
              <Route
                path="/tag/:tag"
                render={[Function]}
              />
              <Route
                component={[Function]}
                path="/:userId/posts/:postId/:tag?"
              />
              <Route
                component={[Function]}
                path="/:userId"
              />
              <Route
                path="/"
                render={[Function]}
              />
            </Switch>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  path="/people/:tab?"
                  render={[Function]}
                />,
                <Route
                  path="/tag/:tag"
                  render={[Function]}
                />,
                <Route
                  component={[Function]}
                  path="/:userId/posts/:postId/:tag?"
                />,
                <Route
                  component={[Function]}
                  path="/:userId"
                />,
                <Route
                  path="/"
                  render={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/people/:tab?",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/tag/:tag",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/:userId/posts/:postId/:tag?",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/:userId",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(HomeHeader)
            sidebar={[Function]}
            sidebarStatus={true}
            uid={undefined}
          />,
          <Connect(Sidebar)
            open={[Function]}
            overlay={[Function]}
            status={[Function]}
          >
            <SidebarMain>
              <Switch>
                <Route
                  path="/people/:tab?"
                  render={[Function]}
                />
                <Route
                  path="/tag/:tag"
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  path="/:userId/posts/:postId/:tag?"
                />
                <Route
                  component={[Function]}
                  path="/:userId"
                />
                <Route
                  path="/"
                  render={[Function]}
                />
              </Switch>
            </SidebarMain>
          </Connect(Sidebar)>,
        ],
        "id": "home",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "sidebar": [Function],
            "sidebarStatus": true,
            "uid": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <SidebarMain>
              <Switch>
                <Route
                  path="/people/:tab?"
                  render={[Function]}
                />
                <Route
                  path="/tag/:tag"
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  path="/:userId/posts/:postId/:tag?"
                />
                <Route
                  component={[Function]}
                  path="/:userId"
                />
                <Route
                  path="/"
                  render={[Function]}
                />
              </Switch>
            </SidebarMain>,
            "open": [Function],
            "overlay": [Function],
            "status": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                  path="/people/:tab?"
                  render={[Function]}
                />
                <Route
                  path="/tag/:tag"
                  render={[Function]}
                />
                <Route
                  component={[Function]}
                  path="/:userId/posts/:postId/:tag?"
                />
                <Route
                  component={[Function]}
                  path="/:userId"
                />
                <Route
                  path="/"
                  render={[Function]}
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    path="/people/:tab?"
                    render={[Function]}
                  />,
                  <Route
                    path="/tag/:tag"
                    render={[Function]}
                  />,
                  <Route
                    component={[Function]}
                    path="/:userId/posts/:postId/:tag?"
                  />,
                  <Route
                    component={[Function]}
                    path="/:userId"
                  />,
                  <Route
                    path="/"
                    render={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/people/:tab?",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/tag/:tag",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/:userId/posts/:postId/:tag?",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/:userId",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
