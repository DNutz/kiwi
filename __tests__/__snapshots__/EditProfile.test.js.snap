// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: EditProfile renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditProfile
    info={Object {}}
    open={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Dialog
          autoDetectWindowHeight={true}
          autoScrollBodyContent={true}
          bodyStyle={
            Object {
              "backgroundColor": "none",
              "borderBottom": "none",
              "borderTop": "none",
              "padding": "none",
            }
          }
          contentStyle={
            Object {
              "backgroundColor": "none",
              "height": "100%",
              "maxHeight": "none",
              "maxWidth": "450px",
            }
          }
          id="Edit-Profile"
          modal={false}
          onRequestClose={undefined}
          open={true}
          overlayStyle={
            Object {
              "background": "rgba(0,0,0,0.12)",
            }
          }
          repositionOnUpdate={true}
          style={
            Object {
              "backgroundColor": "none",
              "height": "100%",
              "maxHeight": "none",
            }
          }
        >
          <div
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <Connect(ImgCover)
              borderRadius="2px"
              fileName="https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57"
              height="250px"
              width="100%"
            />
            <div
              className="g__circle-black"
              onClick={[Function]}
              style={
                Object {
                  "position": "absolute",
                  "right": "10px",
                  "top": "10px",
                }
              }
            >
              <ImagePhotoCamera
                style={
                  Object {
                    "fill": "rgba(255, 255, 255, 0.88)",
                    "transform": "translate(6px, 6px)",
                  }
                }
              />
            </div>
          </div>
          <div
            className="profile__edit"
          >
            <EventListener
              onResize={[Function]}
              target="window"
            />
            <div
              className="left"
            >
              <div
                style={
                  Object {
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <div
                  className="g__circle-black"
                  onClick={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                      "left": "50%",
                      "margin": "-18px",
                      "position": "absolute",
                      "top": "52px",
                    }
                  }
                >
                  <ImagePhotoCamera
                    style={
                      Object {
                        "fill": "rgba(255, 255, 255, 0.88)",
                        "transform": "translate(6px, 6px)",
                      }
                    }
                  />
                </div>
                <Connect(UserAvatar)
                  fileName=""
                  fullName={undefined}
                  size={90}
                  style={
                    Object {
                      "border": "2px solid rgb(255, 255, 255)",
                    }
                  }
                />
              </div>
              <div
                className="info"
              >
                <div
                  className="fullName"
                />
              </div>
            </div>
          </div>
          <Paper
            circle={false}
            rounded={true}
            style={
              Object {
                "display": "block",
                "height": "100%",
                "margin": "0 auto",
                "width": "90%",
              }
            }
            transitionEnabled={true}
            zDepth={1}
          >
            <div
              style={
                Object {
                  "display": "flex",
                  "flexGrow": 1,
                  "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                  "overflow": "hidden",
                  "padding": "24px 24px 20px 24px",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "wordWrap": "break-word",
                }
              }
            >
              Personal Information
            </div>
            <div
              style={
                Object {
                  "display": "flex",
                  "padding": "0px 24px 20px 24px",
                }
              }
            >
              <TextField
                disabled={false}
                errorText=""
                floatingLabelFixed={false}
                floatingLabelText="Full name"
                fullWidth={false}
                multiLine={false}
                name="fullNameInput"
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value=""
              />
            </div>
            <br />
            <div
              style={
                Object {
                  "display": "flex",
                  "padding": "0px 24px 20px 24px",
                }
              }
            >
              <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="Tag Line"
                fullWidth={false}
                multiLine={false}
                name="tagLineInput"
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value=""
              />
            </div>
            <br />
            <div
              style={
                Object {
                  "display": "flex",
                  "justifyContent": "flex-end",
                  "padding": "24px 24px 20px",
                }
              }
            >
              <FlatButton
                disabled={false}
                fullWidth={false}
                label="CANCEL"
                labelPosition="after"
                labelStyle={Object {}}
                onClick={undefined}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                primary={false}
                secondary={false}
              />
              <RaisedButton
                disabled={false}
                fullWidth={false}
                label="UPDATE"
                labelPosition="after"
                onClick={[Function]}
                primary={true}
                secondary={false}
                style={
                  Object {
                    "marginLeft": "10px",
                  }
                }
              />
            </div>
          </Paper>
          <div
            style={
              Object {
                "height": "16px",
              }
            }
          />
        </Dialog>,
        <Dialog
          autoDetectWindowHeight={false}
          autoScrollBodyContent={false}
          contentStyle={
            Object {
              "borderRadius": "4px",
              "maxWidth": "530px",
              "width": "",
            }
          }
          modal={false}
          onRequestClose={[Function]}
          open={false}
          overlayStyle={
            Object {
              "background": "rgba(0,0,0,0.12)",
            }
          }
          repositionOnUpdate={true}
          title={
            <DialogTitle
              onRequestClose={[Function]}
              title="Choose an banner image"
            />
          }
        >
          <Connect(ImageGallery)
            close={[Function]}
            set={[Function]}
          />
        </Dialog>,
        <Dialog
          autoDetectWindowHeight={false}
          autoScrollBodyContent={false}
          contentStyle={
            Object {
              "borderRadius": "4px",
              "maxWidth": "530px",
              "width": "",
            }
          }
          modal={false}
          onRequestClose={[Function]}
          open={false}
          overlayStyle={
            Object {
              "background": "rgba(0,0,0,0.12)",
            }
          }
          repositionOnUpdate={true}
          title={
            <DialogTitle
              onRequestClose={[Function]}
              title="Choose an avatar image"
            />
          }
        >
          <Connect(ImageGallery)
            close={[Function]}
            set={[Function]}
          />
        </Dialog>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoDetectWindowHeight": true,
          "autoScrollBodyContent": true,
          "bodyStyle": Object {
            "backgroundColor": "none",
            "borderBottom": "none",
            "borderTop": "none",
            "padding": "none",
          },
          "children": Array [
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <Connect(ImgCover)
                borderRadius="2px"
                fileName="https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57"
                height="250px"
                width="100%"
              />
              <div
                className="g__circle-black"
                onClick={[Function]}
                style={
                  Object {
                    "position": "absolute",
                    "right": "10px",
                    "top": "10px",
                  }
                }
              >
                <ImagePhotoCamera
                  style={
                    Object {
                      "fill": "rgba(255, 255, 255, 0.88)",
                      "transform": "translate(6px, 6px)",
                    }
                  }
                />
              </div>
            </div>,
            <div
              className="profile__edit"
            >
              <EventListener
                onResize={[Function]}
                target="window"
              />
              <div
                className="left"
              >
                <div
                  style={
                    Object {
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <div
                    className="g__circle-black"
                    onClick={[Function]}
                    style={
                      Object {
                        "display": "inline-block",
                        "left": "50%",
                        "margin": "-18px",
                        "position": "absolute",
                        "top": "52px",
                      }
                    }
                  >
                    <ImagePhotoCamera
                      style={
                        Object {
                          "fill": "rgba(255, 255, 255, 0.88)",
                          "transform": "translate(6px, 6px)",
                        }
                      }
                    />
                  </div>
                  <Connect(UserAvatar)
                    fileName=""
                    fullName={undefined}
                    size={90}
                    style={
                      Object {
                        "border": "2px solid rgb(255, 255, 255)",
                      }
                    }
                  />
                </div>
                <div
                  className="info"
                >
                  <div
                    className="fullName"
                  />
                </div>
              </div>
            </div>,
            <Paper
              circle={false}
              rounded={true}
              style={
                Object {
                  "display": "block",
                  "height": "100%",
                  "margin": "0 auto",
                  "width": "90%",
                }
              }
              transitionEnabled={true}
              zDepth={1}
            >
              <div
                style={
                  Object {
                    "display": "flex",
                    "flexGrow": 1,
                    "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                    "overflow": "hidden",
                    "padding": "24px 24px 20px 24px",
                    "textOverflow": "ellipsis",
                    "whiteSpace": "nowrap",
                    "wordWrap": "break-word",
                  }
                }
              >
                Personal Information
              </div>
              <div
                style={
                  Object {
                    "display": "flex",
                    "padding": "0px 24px 20px 24px",
                  }
                }
              >
                <TextField
                  disabled={false}
                  errorText=""
                  floatingLabelFixed={false}
                  floatingLabelText="Full name"
                  fullWidth={false}
                  multiLine={false}
                  name="fullNameInput"
                  onChange={[Function]}
                  rows={1}
                  type="text"
                  underlineShow={true}
                  value=""
                />
              </div>
              <br />
              <div
                style={
                  Object {
                    "display": "flex",
                    "padding": "0px 24px 20px 24px",
                  }
                }
              >
                <TextField
                  disabled={false}
                  floatingLabelFixed={false}
                  floatingLabelText="Tag Line"
                  fullWidth={false}
                  multiLine={false}
                  name="tagLineInput"
                  onChange={[Function]}
                  rows={1}
                  type="text"
                  underlineShow={true}
                  value=""
                />
              </div>
              <br />
              <div
                style={
                  Object {
                    "display": "flex",
                    "justifyContent": "flex-end",
                    "padding": "24px 24px 20px",
                  }
                }
              >
                <FlatButton
                  disabled={false}
                  fullWidth={false}
                  label="CANCEL"
                  labelPosition="after"
                  labelStyle={Object {}}
                  onClick={undefined}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onTouchStart={[Function]}
                  primary={false}
                  secondary={false}
                />
                <RaisedButton
                  disabled={false}
                  fullWidth={false}
                  label="UPDATE"
                  labelPosition="after"
                  onClick={[Function]}
                  primary={true}
                  secondary={false}
                  style={
                    Object {
                      "marginLeft": "10px",
                    }
                  }
                />
              </div>
            </Paper>,
            <div
              style={
                Object {
                  "height": "16px",
                }
              }
            />,
          ],
          "contentStyle": Object {
            "backgroundColor": "none",
            "height": "100%",
            "maxHeight": "none",
            "maxWidth": "450px",
          },
          "id": "Edit-Profile",
          "modal": false,
          "onRequestClose": undefined,
          "open": true,
          "overlayStyle": Object {
            "background": "rgba(0,0,0,0.12)",
          },
          "repositionOnUpdate": true,
          "style": Object {
            "backgroundColor": "none",
            "height": "100%",
            "maxHeight": "none",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Connect(ImgCover)
                  borderRadius="2px"
                  fileName="https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57"
                  height="250px"
                  width="100%"
                />,
                <div
                  className="g__circle-black"
                  onClick={[Function]}
                  style={
                    Object {
                      "position": "absolute",
                      "right": "10px",
                      "top": "10px",
                    }
                  }
                >
                  <ImagePhotoCamera
                    style={
                      Object {
                        "fill": "rgba(255, 255, 255, 0.88)",
                        "transform": "translate(6px, 6px)",
                      }
                    }
                  />
                </div>,
              ],
              "style": Object {
                "position": "relative",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "borderRadius": "2px",
                  "fileName": "https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57",
                  "height": "250px",
                  "width": "100%",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ImagePhotoCamera
                    style={
                      Object {
                        "fill": "rgba(255, 255, 255, 0.88)",
                        "transform": "translate(6px, 6px)",
                      }
                    }
                  />,
                  "className": "g__circle-black",
                  "onClick": [Function],
                  "style": Object {
                    "position": "absolute",
                    "right": "10px",
                    "top": "10px",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "style": Object {
                      "fill": "rgba(255, 255, 255, 0.88)",
                      "transform": "translate(6px, 6px)",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EventListener
                  onResize={[Function]}
                  target="window"
                />,
                <div
                  className="left"
                >
                  <div
                    style={
                      Object {
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <div
                      className="g__circle-black"
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "inline-block",
                          "left": "50%",
                          "margin": "-18px",
                          "position": "absolute",
                          "top": "52px",
                        }
                      }
                    >
                      <ImagePhotoCamera
                        style={
                          Object {
                            "fill": "rgba(255, 255, 255, 0.88)",
                            "transform": "translate(6px, 6px)",
                          }
                        }
                      />
                    </div>
                    <Connect(UserAvatar)
                      fileName=""
                      fullName={undefined}
                      size={90}
                      style={
                        Object {
                          "border": "2px solid rgb(255, 255, 255)",
                        }
                      }
                    />
                  </div>
                  <div
                    className="info"
                  >
                    <div
                      className="fullName"
                    />
                  </div>
                </div>,
              ],
              "className": "profile__edit",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onResize": [Function],
                  "target": "window",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      style={
                        Object {
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <div
                        className="g__circle-black"
                        onClick={[Function]}
                        style={
                          Object {
                            "display": "inline-block",
                            "left": "50%",
                            "margin": "-18px",
                            "position": "absolute",
                            "top": "52px",
                          }
                        }
                      >
                        <ImagePhotoCamera
                          style={
                            Object {
                              "fill": "rgba(255, 255, 255, 0.88)",
                              "transform": "translate(6px, 6px)",
                            }
                          }
                        />
                      </div>
                      <Connect(UserAvatar)
                        fileName=""
                        fullName={undefined}
                        size={90}
                        style={
                          Object {
                            "border": "2px solid rgb(255, 255, 255)",
                          }
                        }
                      />
                    </div>,
                    <div
                      className="info"
                    >
                      <div
                        className="fullName"
                      />
                    </div>,
                  ],
                  "className": "left",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="g__circle-black"
                          onClick={[Function]}
                          style={
                            Object {
                              "display": "inline-block",
                              "left": "50%",
                              "margin": "-18px",
                              "position": "absolute",
                              "top": "52px",
                            }
                          }
                        >
                          <ImagePhotoCamera
                            style={
                              Object {
                                "fill": "rgba(255, 255, 255, 0.88)",
                                "transform": "translate(6px, 6px)",
                              }
                            }
                          />
                        </div>,
                        <Connect(UserAvatar)
                          fileName=""
                          fullName={undefined}
                          size={90}
                          style={
                            Object {
                              "border": "2px solid rgb(255, 255, 255)",
                            }
                          }
                        />,
                      ],
                      "style": Object {
                        "display": "flex",
                        "justifyContent": "center",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <ImagePhotoCamera
                            style={
                              Object {
                                "fill": "rgba(255, 255, 255, 0.88)",
                                "transform": "translate(6px, 6px)",
                              }
                            }
                          />,
                          "className": "g__circle-black",
                          "onClick": [Function],
                          "style": Object {
                            "display": "inline-block",
                            "left": "50%",
                            "margin": "-18px",
                            "position": "absolute",
                            "top": "52px",
                          },
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "style": Object {
                              "fill": "rgba(255, 255, 255, 0.88)",
                              "transform": "translate(6px, 6px)",
                            },
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "fileName": "",
                          "fullName": undefined,
                          "size": 90,
                          "style": Object {
                            "border": "2px solid rgb(255, 255, 255)",
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="fullName"
                      />,
                      "className": "info",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": "fullName",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  style={
                    Object {
                      "display": "flex",
                      "flexGrow": 1,
                      "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                      "overflow": "hidden",
                      "padding": "24px 24px 20px 24px",
                      "textOverflow": "ellipsis",
                      "whiteSpace": "nowrap",
                      "wordWrap": "break-word",
                    }
                  }
                >
                  Personal Information
                </div>,
                <div
                  style={
                    Object {
                      "display": "flex",
                      "padding": "0px 24px 20px 24px",
                    }
                  }
                >
                  <TextField
                    disabled={false}
                    errorText=""
                    floatingLabelFixed={false}
                    floatingLabelText="Full name"
                    fullWidth={false}
                    multiLine={false}
                    name="fullNameInput"
                    onChange={[Function]}
                    rows={1}
                    type="text"
                    underlineShow={true}
                    value=""
                  />
                </div>,
                <br />,
                <div
                  style={
                    Object {
                      "display": "flex",
                      "padding": "0px 24px 20px 24px",
                    }
                  }
                >
                  <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    floatingLabelText="Tag Line"
                    fullWidth={false}
                    multiLine={false}
                    name="tagLineInput"
                    onChange={[Function]}
                    rows={1}
                    type="text"
                    underlineShow={true}
                    value=""
                  />
                </div>,
                <br />,
                <div
                  style={
                    Object {
                      "display": "flex",
                      "justifyContent": "flex-end",
                      "padding": "24px 24px 20px",
                    }
                  }
                >
                  <FlatButton
                    disabled={false}
                    fullWidth={false}
                    label="CANCEL"
                    labelPosition="after"
                    labelStyle={Object {}}
                    onClick={undefined}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    primary={false}
                    secondary={false}
                  />
                  <RaisedButton
                    disabled={false}
                    fullWidth={false}
                    label="UPDATE"
                    labelPosition="after"
                    onClick={[Function]}
                    primary={true}
                    secondary={false}
                    style={
                      Object {
                        "marginLeft": "10px",
                      }
                    }
                  />
                </div>,
              ],
              "circle": false,
              "rounded": true,
              "style": Object {
                "display": "block",
                "height": "100%",
                "margin": "0 auto",
                "width": "90%",
              },
              "transitionEnabled": true,
              "zDepth": 1,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Personal Information",
                  "style": Object {
                    "display": "flex",
                    "flexGrow": 1,
                    "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                    "overflow": "hidden",
                    "padding": "24px 24px 20px 24px",
                    "textOverflow": "ellipsis",
                    "whiteSpace": "nowrap",
                    "wordWrap": "break-word",
                  },
                },
                "ref": null,
                "rendered": "Personal Information",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <TextField
                    disabled={false}
                    errorText=""
                    floatingLabelFixed={false}
                    floatingLabelText="Full name"
                    fullWidth={false}
                    multiLine={false}
                    name="fullNameInput"
                    onChange={[Function]}
                    rows={1}
                    type="text"
                    underlineShow={true}
                    value=""
                  />,
                  "style": Object {
                    "display": "flex",
                    "padding": "0px 24px 20px 24px",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "disabled": false,
                    "errorText": "",
                    "floatingLabelFixed": false,
                    "floatingLabelText": "Full name",
                    "fullWidth": false,
                    "multiLine": false,
                    "name": "fullNameInput",
                    "onChange": [Function],
                    "rows": 1,
                    "type": "text",
                    "underlineShow": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    floatingLabelText="Tag Line"
                    fullWidth={false}
                    multiLine={false}
                    name="tagLineInput"
                    onChange={[Function]}
                    rows={1}
                    type="text"
                    underlineShow={true}
                    value=""
                  />,
                  "style": Object {
                    "display": "flex",
                    "padding": "0px 24px 20px 24px",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "disabled": false,
                    "floatingLabelFixed": false,
                    "floatingLabelText": "Tag Line",
                    "fullWidth": false,
                    "multiLine": false,
                    "name": "tagLineInput",
                    "onChange": [Function],
                    "rows": 1,
                    "type": "text",
                    "underlineShow": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <FlatButton
                      disabled={false}
                      fullWidth={false}
                      label="CANCEL"
                      labelPosition="after"
                      labelStyle={Object {}}
                      onClick={undefined}
                      onKeyboardFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      primary={false}
                      secondary={false}
                    />,
                    <RaisedButton
                      disabled={false}
                      fullWidth={false}
                      label="UPDATE"
                      labelPosition="after"
                      onClick={[Function]}
                      primary={true}
                      secondary={false}
                      style={
                        Object {
                          "marginLeft": "10px",
                        }
                      }
                    />,
                  ],
                  "style": Object {
                    "display": "flex",
                    "justifyContent": "flex-end",
                    "padding": "24px 24px 20px",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": false,
                      "fullWidth": false,
                      "label": "CANCEL",
                      "labelPosition": "after",
                      "labelStyle": Object {},
                      "onClick": undefined,
                      "onKeyboardFocus": [Function],
                      "onMouseEnter": [Function],
                      "onMouseLeave": [Function],
                      "onTouchStart": [Function],
                      "primary": false,
                      "secondary": false,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": false,
                      "fullWidth": false,
                      "label": "UPDATE",
                      "labelPosition": "after",
                      "onClick": [Function],
                      "primary": true,
                      "secondary": false,
                      "style": Object {
                        "marginLeft": "10px",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "style": Object {
                "height": "16px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoDetectWindowHeight": false,
          "autoScrollBodyContent": false,
          "children": <Connect(ImageGallery)
            close={[Function]}
            set={[Function]}
          />,
          "contentStyle": Object {
            "borderRadius": "4px",
            "maxWidth": "530px",
            "width": "",
          },
          "modal": false,
          "onRequestClose": [Function],
          "open": false,
          "overlayStyle": Object {
            "background": "rgba(0,0,0,0.12)",
          },
          "repositionOnUpdate": true,
          "title": <DialogTitle
            onRequestClose={[Function]}
            title="Choose an banner image"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "close": [Function],
            "set": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoDetectWindowHeight": false,
          "autoScrollBodyContent": false,
          "children": <Connect(ImageGallery)
            close={[Function]}
            set={[Function]}
          />,
          "contentStyle": Object {
            "borderRadius": "4px",
            "maxWidth": "530px",
            "width": "",
          },
          "modal": false,
          "onRequestClose": [Function],
          "open": false,
          "overlayStyle": Object {
            "background": "rgba(0,0,0,0.12)",
          },
          "repositionOnUpdate": true,
          "title": <DialogTitle
            onRequestClose={[Function]}
            title="Choose an avatar image"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "close": [Function],
            "set": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Dialog
            autoDetectWindowHeight={true}
            autoScrollBodyContent={true}
            bodyStyle={
              Object {
                "backgroundColor": "none",
                "borderBottom": "none",
                "borderTop": "none",
                "padding": "none",
              }
            }
            contentStyle={
              Object {
                "backgroundColor": "none",
                "height": "100%",
                "maxHeight": "none",
                "maxWidth": "450px",
              }
            }
            id="Edit-Profile"
            modal={false}
            onRequestClose={undefined}
            open={true}
            overlayStyle={
              Object {
                "background": "rgba(0,0,0,0.12)",
              }
            }
            repositionOnUpdate={true}
            style={
              Object {
                "backgroundColor": "none",
                "height": "100%",
                "maxHeight": "none",
              }
            }
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <Connect(ImgCover)
                borderRadius="2px"
                fileName="https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57"
                height="250px"
                width="100%"
              />
              <div
                className="g__circle-black"
                onClick={[Function]}
                style={
                  Object {
                    "position": "absolute",
                    "right": "10px",
                    "top": "10px",
                  }
                }
              >
                <ImagePhotoCamera
                  style={
                    Object {
                      "fill": "rgba(255, 255, 255, 0.88)",
                      "transform": "translate(6px, 6px)",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="profile__edit"
            >
              <EventListener
                onResize={[Function]}
                target="window"
              />
              <div
                className="left"
              >
                <div
                  style={
                    Object {
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <div
                    className="g__circle-black"
                    onClick={[Function]}
                    style={
                      Object {
                        "display": "inline-block",
                        "left": "50%",
                        "margin": "-18px",
                        "position": "absolute",
                        "top": "52px",
                      }
                    }
                  >
                    <ImagePhotoCamera
                      style={
                        Object {
                          "fill": "rgba(255, 255, 255, 0.88)",
                          "transform": "translate(6px, 6px)",
                        }
                      }
                    />
                  </div>
                  <Connect(UserAvatar)
                    fileName=""
                    fullName={undefined}
                    size={90}
                    style={
                      Object {
                        "border": "2px solid rgb(255, 255, 255)",
                      }
                    }
                  />
                </div>
                <div
                  className="info"
                >
                  <div
                    className="fullName"
                  />
                </div>
              </div>
            </div>
            <Paper
              circle={false}
              rounded={true}
              style={
                Object {
                  "display": "block",
                  "height": "100%",
                  "margin": "0 auto",
                  "width": "90%",
                }
              }
              transitionEnabled={true}
              zDepth={1}
            >
              <div
                style={
                  Object {
                    "display": "flex",
                    "flexGrow": 1,
                    "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                    "overflow": "hidden",
                    "padding": "24px 24px 20px 24px",
                    "textOverflow": "ellipsis",
                    "whiteSpace": "nowrap",
                    "wordWrap": "break-word",
                  }
                }
              >
                Personal Information
              </div>
              <div
                style={
                  Object {
                    "display": "flex",
                    "padding": "0px 24px 20px 24px",
                  }
                }
              >
                <TextField
                  disabled={false}
                  errorText=""
                  floatingLabelFixed={false}
                  floatingLabelText="Full name"
                  fullWidth={false}
                  multiLine={false}
                  name="fullNameInput"
                  onChange={[Function]}
                  rows={1}
                  type="text"
                  underlineShow={true}
                  value=""
                />
              </div>
              <br />
              <div
                style={
                  Object {
                    "display": "flex",
                    "padding": "0px 24px 20px 24px",
                  }
                }
              >
                <TextField
                  disabled={false}
                  floatingLabelFixed={false}
                  floatingLabelText="Tag Line"
                  fullWidth={false}
                  multiLine={false}
                  name="tagLineInput"
                  onChange={[Function]}
                  rows={1}
                  type="text"
                  underlineShow={true}
                  value=""
                />
              </div>
              <br />
              <div
                style={
                  Object {
                    "display": "flex",
                    "justifyContent": "flex-end",
                    "padding": "24px 24px 20px",
                  }
                }
              >
                <FlatButton
                  disabled={false}
                  fullWidth={false}
                  label="CANCEL"
                  labelPosition="after"
                  labelStyle={Object {}}
                  onClick={undefined}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onTouchStart={[Function]}
                  primary={false}
                  secondary={false}
                />
                <RaisedButton
                  disabled={false}
                  fullWidth={false}
                  label="UPDATE"
                  labelPosition="after"
                  onClick={[Function]}
                  primary={true}
                  secondary={false}
                  style={
                    Object {
                      "marginLeft": "10px",
                    }
                  }
                />
              </div>
            </Paper>
            <div
              style={
                Object {
                  "height": "16px",
                }
              }
            />
          </Dialog>,
          <Dialog
            autoDetectWindowHeight={false}
            autoScrollBodyContent={false}
            contentStyle={
              Object {
                "borderRadius": "4px",
                "maxWidth": "530px",
                "width": "",
              }
            }
            modal={false}
            onRequestClose={[Function]}
            open={false}
            overlayStyle={
              Object {
                "background": "rgba(0,0,0,0.12)",
              }
            }
            repositionOnUpdate={true}
            title={
              <DialogTitle
                onRequestClose={[Function]}
                title="Choose an banner image"
              />
            }
          >
            <Connect(ImageGallery)
              close={[Function]}
              set={[Function]}
            />
          </Dialog>,
          <Dialog
            autoDetectWindowHeight={false}
            autoScrollBodyContent={false}
            contentStyle={
              Object {
                "borderRadius": "4px",
                "maxWidth": "530px",
                "width": "",
              }
            }
            modal={false}
            onRequestClose={[Function]}
            open={false}
            overlayStyle={
              Object {
                "background": "rgba(0,0,0,0.12)",
              }
            }
            repositionOnUpdate={true}
            title={
              <DialogTitle
                onRequestClose={[Function]}
                title="Choose an avatar image"
              />
            }
          >
            <Connect(ImageGallery)
              close={[Function]}
              set={[Function]}
            />
          </Dialog>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoDetectWindowHeight": true,
            "autoScrollBodyContent": true,
            "bodyStyle": Object {
              "backgroundColor": "none",
              "borderBottom": "none",
              "borderTop": "none",
              "padding": "none",
            },
            "children": Array [
              <div
                style={
                  Object {
                    "position": "relative",
                  }
                }
              >
                <Connect(ImgCover)
                  borderRadius="2px"
                  fileName="https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57"
                  height="250px"
                  width="100%"
                />
                <div
                  className="g__circle-black"
                  onClick={[Function]}
                  style={
                    Object {
                      "position": "absolute",
                      "right": "10px",
                      "top": "10px",
                    }
                  }
                >
                  <ImagePhotoCamera
                    style={
                      Object {
                        "fill": "rgba(255, 255, 255, 0.88)",
                        "transform": "translate(6px, 6px)",
                      }
                    }
                  />
                </div>
              </div>,
              <div
                className="profile__edit"
              >
                <EventListener
                  onResize={[Function]}
                  target="window"
                />
                <div
                  className="left"
                >
                  <div
                    style={
                      Object {
                        "display": "flex",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <div
                      className="g__circle-black"
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "inline-block",
                          "left": "50%",
                          "margin": "-18px",
                          "position": "absolute",
                          "top": "52px",
                        }
                      }
                    >
                      <ImagePhotoCamera
                        style={
                          Object {
                            "fill": "rgba(255, 255, 255, 0.88)",
                            "transform": "translate(6px, 6px)",
                          }
                        }
                      />
                    </div>
                    <Connect(UserAvatar)
                      fileName=""
                      fullName={undefined}
                      size={90}
                      style={
                        Object {
                          "border": "2px solid rgb(255, 255, 255)",
                        }
                      }
                    />
                  </div>
                  <div
                    className="info"
                  >
                    <div
                      className="fullName"
                    />
                  </div>
                </div>
              </div>,
              <Paper
                circle={false}
                rounded={true}
                style={
                  Object {
                    "display": "block",
                    "height": "100%",
                    "margin": "0 auto",
                    "width": "90%",
                  }
                }
                transitionEnabled={true}
                zDepth={1}
              >
                <div
                  style={
                    Object {
                      "display": "flex",
                      "flexGrow": 1,
                      "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                      "overflow": "hidden",
                      "padding": "24px 24px 20px 24px",
                      "textOverflow": "ellipsis",
                      "whiteSpace": "nowrap",
                      "wordWrap": "break-word",
                    }
                  }
                >
                  Personal Information
                </div>
                <div
                  style={
                    Object {
                      "display": "flex",
                      "padding": "0px 24px 20px 24px",
                    }
                  }
                >
                  <TextField
                    disabled={false}
                    errorText=""
                    floatingLabelFixed={false}
                    floatingLabelText="Full name"
                    fullWidth={false}
                    multiLine={false}
                    name="fullNameInput"
                    onChange={[Function]}
                    rows={1}
                    type="text"
                    underlineShow={true}
                    value=""
                  />
                </div>
                <br />
                <div
                  style={
                    Object {
                      "display": "flex",
                      "padding": "0px 24px 20px 24px",
                    }
                  }
                >
                  <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    floatingLabelText="Tag Line"
                    fullWidth={false}
                    multiLine={false}
                    name="tagLineInput"
                    onChange={[Function]}
                    rows={1}
                    type="text"
                    underlineShow={true}
                    value=""
                  />
                </div>
                <br />
                <div
                  style={
                    Object {
                      "display": "flex",
                      "justifyContent": "flex-end",
                      "padding": "24px 24px 20px",
                    }
                  }
                >
                  <FlatButton
                    disabled={false}
                    fullWidth={false}
                    label="CANCEL"
                    labelPosition="after"
                    labelStyle={Object {}}
                    onClick={undefined}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    primary={false}
                    secondary={false}
                  />
                  <RaisedButton
                    disabled={false}
                    fullWidth={false}
                    label="UPDATE"
                    labelPosition="after"
                    onClick={[Function]}
                    primary={true}
                    secondary={false}
                    style={
                      Object {
                        "marginLeft": "10px",
                      }
                    }
                  />
                </div>
              </Paper>,
              <div
                style={
                  Object {
                    "height": "16px",
                  }
                }
              />,
            ],
            "contentStyle": Object {
              "backgroundColor": "none",
              "height": "100%",
              "maxHeight": "none",
              "maxWidth": "450px",
            },
            "id": "Edit-Profile",
            "modal": false,
            "onRequestClose": undefined,
            "open": true,
            "overlayStyle": Object {
              "background": "rgba(0,0,0,0.12)",
            },
            "repositionOnUpdate": true,
            "style": Object {
              "backgroundColor": "none",
              "height": "100%",
              "maxHeight": "none",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Connect(ImgCover)
                    borderRadius="2px"
                    fileName="https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57"
                    height="250px"
                    width="100%"
                  />,
                  <div
                    className="g__circle-black"
                    onClick={[Function]}
                    style={
                      Object {
                        "position": "absolute",
                        "right": "10px",
                        "top": "10px",
                      }
                    }
                  >
                    <ImagePhotoCamera
                      style={
                        Object {
                          "fill": "rgba(255, 255, 255, 0.88)",
                          "transform": "translate(6px, 6px)",
                        }
                      }
                    />
                  </div>,
                ],
                "style": Object {
                  "position": "relative",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "borderRadius": "2px",
                    "fileName": "https://firebasestorage.googleapis.com/v0/b/open-social-33d92.appspot.com/o/images%2F751145a1-9488-46fd-a97e-04018665a6d3.JPG?alt=media&token=1a1d5e21-5101-450e-9054-ea4a20e06c57",
                    "height": "250px",
                    "width": "100%",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <ImagePhotoCamera
                      style={
                        Object {
                          "fill": "rgba(255, 255, 255, 0.88)",
                          "transform": "translate(6px, 6px)",
                        }
                      }
                    />,
                    "className": "g__circle-black",
                    "onClick": [Function],
                    "style": Object {
                      "position": "absolute",
                      "right": "10px",
                      "top": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "style": Object {
                        "fill": "rgba(255, 255, 255, 0.88)",
                        "transform": "translate(6px, 6px)",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EventListener
                    onResize={[Function]}
                    target="window"
                  />,
                  <div
                    className="left"
                  >
                    <div
                      style={
                        Object {
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <div
                        className="g__circle-black"
                        onClick={[Function]}
                        style={
                          Object {
                            "display": "inline-block",
                            "left": "50%",
                            "margin": "-18px",
                            "position": "absolute",
                            "top": "52px",
                          }
                        }
                      >
                        <ImagePhotoCamera
                          style={
                            Object {
                              "fill": "rgba(255, 255, 255, 0.88)",
                              "transform": "translate(6px, 6px)",
                            }
                          }
                        />
                      </div>
                      <Connect(UserAvatar)
                        fileName=""
                        fullName={undefined}
                        size={90}
                        style={
                          Object {
                            "border": "2px solid rgb(255, 255, 255)",
                          }
                        }
                      />
                    </div>
                    <div
                      className="info"
                    >
                      <div
                        className="fullName"
                      />
                    </div>
                  </div>,
                ],
                "className": "profile__edit",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onResize": [Function],
                    "target": "window",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        style={
                          Object {
                            "display": "flex",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="g__circle-black"
                          onClick={[Function]}
                          style={
                            Object {
                              "display": "inline-block",
                              "left": "50%",
                              "margin": "-18px",
                              "position": "absolute",
                              "top": "52px",
                            }
                          }
                        >
                          <ImagePhotoCamera
                            style={
                              Object {
                                "fill": "rgba(255, 255, 255, 0.88)",
                                "transform": "translate(6px, 6px)",
                              }
                            }
                          />
                        </div>
                        <Connect(UserAvatar)
                          fileName=""
                          fullName={undefined}
                          size={90}
                          style={
                            Object {
                              "border": "2px solid rgb(255, 255, 255)",
                            }
                          }
                        />
                      </div>,
                      <div
                        className="info"
                      >
                        <div
                          className="fullName"
                        />
                      </div>,
                    ],
                    "className": "left",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <div
                            className="g__circle-black"
                            onClick={[Function]}
                            style={
                              Object {
                                "display": "inline-block",
                                "left": "50%",
                                "margin": "-18px",
                                "position": "absolute",
                                "top": "52px",
                              }
                            }
                          >
                            <ImagePhotoCamera
                              style={
                                Object {
                                  "fill": "rgba(255, 255, 255, 0.88)",
                                  "transform": "translate(6px, 6px)",
                                }
                              }
                            />
                          </div>,
                          <Connect(UserAvatar)
                            fileName=""
                            fullName={undefined}
                            size={90}
                            style={
                              Object {
                                "border": "2px solid rgb(255, 255, 255)",
                              }
                            }
                          />,
                        ],
                        "style": Object {
                          "display": "flex",
                          "justifyContent": "center",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <ImagePhotoCamera
                              style={
                                Object {
                                  "fill": "rgba(255, 255, 255, 0.88)",
                                  "transform": "translate(6px, 6px)",
                                }
                              }
                            />,
                            "className": "g__circle-black",
                            "onClick": [Function],
                            "style": Object {
                              "display": "inline-block",
                              "left": "50%",
                              "margin": "-18px",
                              "position": "absolute",
                              "top": "52px",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "style": Object {
                                "fill": "rgba(255, 255, 255, 0.88)",
                                "transform": "translate(6px, 6px)",
                              },
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "fileName": "",
                            "fullName": undefined,
                            "size": 90,
                            "style": Object {
                              "border": "2px solid rgb(255, 255, 255)",
                            },
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <div
                          className="fullName"
                        />,
                        "className": "info",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": "fullName",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "div",
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <div
                    style={
                      Object {
                        "display": "flex",
                        "flexGrow": 1,
                        "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                        "overflow": "hidden",
                        "padding": "24px 24px 20px 24px",
                        "textOverflow": "ellipsis",
                        "whiteSpace": "nowrap",
                        "wordWrap": "break-word",
                      }
                    }
                  >
                    Personal Information
                  </div>,
                  <div
                    style={
                      Object {
                        "display": "flex",
                        "padding": "0px 24px 20px 24px",
                      }
                    }
                  >
                    <TextField
                      disabled={false}
                      errorText=""
                      floatingLabelFixed={false}
                      floatingLabelText="Full name"
                      fullWidth={false}
                      multiLine={false}
                      name="fullNameInput"
                      onChange={[Function]}
                      rows={1}
                      type="text"
                      underlineShow={true}
                      value=""
                    />
                  </div>,
                  <br />,
                  <div
                    style={
                      Object {
                        "display": "flex",
                        "padding": "0px 24px 20px 24px",
                      }
                    }
                  >
                    <TextField
                      disabled={false}
                      floatingLabelFixed={false}
                      floatingLabelText="Tag Line"
                      fullWidth={false}
                      multiLine={false}
                      name="tagLineInput"
                      onChange={[Function]}
                      rows={1}
                      type="text"
                      underlineShow={true}
                      value=""
                    />
                  </div>,
                  <br />,
                  <div
                    style={
                      Object {
                        "display": "flex",
                        "justifyContent": "flex-end",
                        "padding": "24px 24px 20px",
                      }
                    }
                  >
                    <FlatButton
                      disabled={false}
                      fullWidth={false}
                      label="CANCEL"
                      labelPosition="after"
                      labelStyle={Object {}}
                      onClick={undefined}
                      onKeyboardFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      primary={false}
                      secondary={false}
                    />
                    <RaisedButton
                      disabled={false}
                      fullWidth={false}
                      label="UPDATE"
                      labelPosition="after"
                      onClick={[Function]}
                      primary={true}
                      secondary={false}
                      style={
                        Object {
                          "marginLeft": "10px",
                        }
                      }
                    />
                  </div>,
                ],
                "circle": false,
                "rounded": true,
                "style": Object {
                  "display": "block",
                  "height": "100%",
                  "margin": "0 auto",
                  "width": "90%",
                },
                "transitionEnabled": true,
                "zDepth": 1,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Personal Information",
                    "style": Object {
                      "display": "flex",
                      "flexGrow": 1,
                      "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                      "overflow": "hidden",
                      "padding": "24px 24px 20px 24px",
                      "textOverflow": "ellipsis",
                      "whiteSpace": "nowrap",
                      "wordWrap": "break-word",
                    },
                  },
                  "ref": null,
                  "rendered": "Personal Information",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <TextField
                      disabled={false}
                      errorText=""
                      floatingLabelFixed={false}
                      floatingLabelText="Full name"
                      fullWidth={false}
                      multiLine={false}
                      name="fullNameInput"
                      onChange={[Function]}
                      rows={1}
                      type="text"
                      underlineShow={true}
                      value=""
                    />,
                    "style": Object {
                      "display": "flex",
                      "padding": "0px 24px 20px 24px",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": false,
                      "errorText": "",
                      "floatingLabelFixed": false,
                      "floatingLabelText": "Full name",
                      "fullWidth": false,
                      "multiLine": false,
                      "name": "fullNameInput",
                      "onChange": [Function],
                      "rows": 1,
                      "type": "text",
                      "underlineShow": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <TextField
                      disabled={false}
                      floatingLabelFixed={false}
                      floatingLabelText="Tag Line"
                      fullWidth={false}
                      multiLine={false}
                      name="tagLineInput"
                      onChange={[Function]}
                      rows={1}
                      type="text"
                      underlineShow={true}
                      value=""
                    />,
                    "style": Object {
                      "display": "flex",
                      "padding": "0px 24px 20px 24px",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": false,
                      "floatingLabelFixed": false,
                      "floatingLabelText": "Tag Line",
                      "fullWidth": false,
                      "multiLine": false,
                      "name": "tagLineInput",
                      "onChange": [Function],
                      "rows": 1,
                      "type": "text",
                      "underlineShow": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <FlatButton
                        disabled={false}
                        fullWidth={false}
                        label="CANCEL"
                        labelPosition="after"
                        labelStyle={Object {}}
                        onClick={undefined}
                        onKeyboardFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        primary={false}
                        secondary={false}
                      />,
                      <RaisedButton
                        disabled={false}
                        fullWidth={false}
                        label="UPDATE"
                        labelPosition="after"
                        onClick={[Function]}
                        primary={true}
                        secondary={false}
                        style={
                          Object {
                            "marginLeft": "10px",
                          }
                        }
                      />,
                    ],
                    "style": Object {
                      "display": "flex",
                      "justifyContent": "flex-end",
                      "padding": "24px 24px 20px",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "disabled": false,
                        "fullWidth": false,
                        "label": "CANCEL",
                        "labelPosition": "after",
                        "labelStyle": Object {},
                        "onClick": undefined,
                        "onKeyboardFocus": [Function],
                        "onMouseEnter": [Function],
                        "onMouseLeave": [Function],
                        "onTouchStart": [Function],
                        "primary": false,
                        "secondary": false,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "disabled": false,
                        "fullWidth": false,
                        "label": "UPDATE",
                        "labelPosition": "after",
                        "onClick": [Function],
                        "primary": true,
                        "secondary": false,
                        "style": Object {
                          "marginLeft": "10px",
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "style": Object {
                  "height": "16px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoDetectWindowHeight": false,
            "autoScrollBodyContent": false,
            "children": <Connect(ImageGallery)
              close={[Function]}
              set={[Function]}
            />,
            "contentStyle": Object {
              "borderRadius": "4px",
              "maxWidth": "530px",
              "width": "",
            },
            "modal": false,
            "onRequestClose": [Function],
            "open": false,
            "overlayStyle": Object {
              "background": "rgba(0,0,0,0.12)",
            },
            "repositionOnUpdate": true,
            "title": <DialogTitle
              onRequestClose={[Function]}
              title="Choose an banner image"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "close": [Function],
              "set": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoDetectWindowHeight": false,
            "autoScrollBodyContent": false,
            "children": <Connect(ImageGallery)
              close={[Function]}
              set={[Function]}
            />,
            "contentStyle": Object {
              "borderRadius": "4px",
              "maxWidth": "530px",
              "width": "",
            },
            "modal": false,
            "onRequestClose": [Function],
            "open": false,
            "overlayStyle": Object {
              "background": "rgba(0,0,0,0.12)",
            },
            "repositionOnUpdate": true,
            "title": <DialogTitle
              onRequestClose={[Function]}
              title="Choose an avatar image"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "close": [Function],
              "set": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
