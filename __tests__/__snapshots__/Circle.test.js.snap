// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: Circle renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Circle
    circle={
      Object {
        "name": "friend",
      }
    }
    openSetting={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ListItem
        autoGenerateNestedIndicator={true}
        containerElement="span"
        disableKeyboardFocus={false}
        disabled={false}
        initiallyOpen={false}
        insetChildren={false}
        leftIcon={
          <ActionGroupWork
            style={
              Object {
                "fill": "#bdbdbd",
                "height": "40px",
                "transform": "translate(0px, -9px)",
                "width": "40px",
              }
            }
          />
        }
        nestedItems={Array []}
        nestedLevel={0}
        onClick={[Function]}
        onKeyboardFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onNestedListToggle={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        open={false}
        primaryText={
          <span
            style={
              Object {
                "color": "rgba(0,0,0,0.87)",
                "fontSize": "16px",
                "marginRight": "8px",
                "overflow": "hidden",
                "textOverflow": "ellipsis",
                "whiteSpace": "nowrap",
              }
            }
          >
            friend
          </span>
        }
        primaryTogglesNestedList={false}
        rightIconButton={
          <IconMenu
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            animated={true}
            iconButtonElement={
              <IconButton
                disableTouchRipple={false}
                disabled={false}
                iconStyle={
                  Object {
                    "height": 24,
                    "width": 24,
                  }
                }
                style={
                  Object {
                    "height": 24,
                    "width": 24,
                  }
                }
                tooltipPosition="bottom-center"
                touch={true}
              >
                <NavigationMoreVert
                  color="#bdbdbd"
                  viewBox="9 0 24 24"
                />
              </IconButton>
            }
            multiple={false}
            onClick={[Function]}
            onItemTouchTap={[Function]}
            onKeyboardFocus={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onRequestChange={[Function]}
            open={null}
            style={
              Object {
                "display": "block",
                "position": "absolute",
                "right": "12px",
                "top": "0px",
              }
            }
            targetOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            touchTapCloseDelay={200}
            useLayerForClickAway={false}
          >
            <MenuItem
              anchorOrigin={
                Object {
                  "horizontal": "right",
                  "vertical": "top",
                }
              }
              checked={false}
              desktop={false}
              disabled={false}
              focusState="none"
              insetChildren={false}
              onClick={[Function]}
              primaryText="Delete circle"
              targetOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
            />
            <MenuItem
              anchorOrigin={
                Object {
                  "horizontal": "right",
                  "vertical": "top",
                }
              }
              checked={false}
              desktop={false}
              disabled={false}
              focusState="none"
              insetChildren={false}
              onClick={undefined}
              primaryText="Circle settings"
              targetOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
            />
          </IconMenu>
        }
        secondaryTextLines={1}
        style={
          Object {
            "backgroundColor": "#fff",
            "borderBottom": "1px solid rgba(0,0,0,0.12)",
            "height": "72px",
            "padding": "12px 0",
          }
        }
      >
        <Dialog
          autoDetectWindowHeight={true}
          autoScrollBodyContent={false}
          contentStyle={
            Object {
              "maxWidth": "400px",
            }
          }
          id={undefined}
          modal={false}
          onRequestClose={undefined}
          open={true}
          overlayStyle={
            Object {
              "background": "rgba(0,0,0,0.12)",
            }
          }
          repositionOnUpdate={true}
          title={
            <div>
              <div
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <NavigationClose
                    hoverColor="#bdbdbd"
                    onClick={undefined}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  />
                </div>
                <div
                  style={
                    Object {
                      "color": "rgba(0,0,0,0.87)",
                      "flex": "1 1",
                      "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                    }
                  }
                >
                  Circle settings
                </div>
                <div
                  style={
                    Object {
                      "marginTop": "-9px",
                    }
                  }
                >
                  <FlatButton
                    disabled={false}
                    fullWidth={false}
                    label="SAVE"
                    labelPosition="after"
                    labelStyle={Object {}}
                    onClick={[Function]}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    primary={true}
                    secondary={false}
                  />
                </div>
              </div>
              <Divider
                inset={false}
              />
            </div>
          }
        >
          <div>
            <TextField
              disabled={false}
              floatingLabelFixed={false}
              floatingLabelText="Circle name"
              fullWidth={false}
              hintText="Circle name"
              multiLine={false}
              onChange={[Function]}
              rows={1}
              type="text"
              underlineShow={true}
              value="friend"
            />
          </div>
        </Dialog>
      </ListItem>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "autoGenerateNestedIndicator": true,
        "children": <Dialog
          autoDetectWindowHeight={true}
          autoScrollBodyContent={false}
          contentStyle={
            Object {
              "maxWidth": "400px",
            }
          }
          id={undefined}
          modal={false}
          onRequestClose={undefined}
          open={true}
          overlayStyle={
            Object {
              "background": "rgba(0,0,0,0.12)",
            }
          }
          repositionOnUpdate={true}
          title={
            <div>
              <div
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <NavigationClose
                    hoverColor="#bdbdbd"
                    onClick={undefined}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  />
                </div>
                <div
                  style={
                    Object {
                      "color": "rgba(0,0,0,0.87)",
                      "flex": "1 1",
                      "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                    }
                  }
                >
                  Circle settings
                </div>
                <div
                  style={
                    Object {
                      "marginTop": "-9px",
                    }
                  }
                >
                  <FlatButton
                    disabled={false}
                    fullWidth={false}
                    label="SAVE"
                    labelPosition="after"
                    labelStyle={Object {}}
                    onClick={[Function]}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    primary={true}
                    secondary={false}
                  />
                </div>
              </div>
              <Divider
                inset={false}
              />
            </div>
          }
        >
          <div>
            <TextField
              disabled={false}
              floatingLabelFixed={false}
              floatingLabelText="Circle name"
              fullWidth={false}
              hintText="Circle name"
              multiLine={false}
              onChange={[Function]}
              rows={1}
              type="text"
              underlineShow={true}
              value="friend"
            />
          </div>
        </Dialog>,
        "containerElement": "span",
        "disableKeyboardFocus": false,
        "disabled": false,
        "initiallyOpen": false,
        "insetChildren": false,
        "leftIcon": <ActionGroupWork
          style={
            Object {
              "fill": "#bdbdbd",
              "height": "40px",
              "transform": "translate(0px, -9px)",
              "width": "40px",
            }
          }
        />,
        "nestedItems": Array [],
        "nestedLevel": 0,
        "onClick": [Function],
        "onKeyboardFocus": [Function],
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "onNestedListToggle": [Function],
        "onTouchEnd": [Function],
        "onTouchStart": [Function],
        "open": false,
        "primaryText": <span
          style={
            Object {
              "color": "rgba(0,0,0,0.87)",
              "fontSize": "16px",
              "marginRight": "8px",
              "overflow": "hidden",
              "textOverflow": "ellipsis",
              "whiteSpace": "nowrap",
            }
          }
        >
          friend
        </span>,
        "primaryTogglesNestedList": false,
        "rightIconButton": <IconMenu
          anchorOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          animated={true}
          iconButtonElement={
            <IconButton
              disableTouchRipple={false}
              disabled={false}
              iconStyle={
                Object {
                  "height": 24,
                  "width": 24,
                }
              }
              style={
                Object {
                  "height": 24,
                  "width": 24,
                }
              }
              tooltipPosition="bottom-center"
              touch={true}
            >
              <NavigationMoreVert
                color="#bdbdbd"
                viewBox="9 0 24 24"
              />
            </IconButton>
          }
          multiple={false}
          onClick={[Function]}
          onItemTouchTap={[Function]}
          onKeyboardFocus={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onRequestChange={[Function]}
          open={null}
          style={
            Object {
              "display": "block",
              "position": "absolute",
              "right": "12px",
              "top": "0px",
            }
          }
          targetOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          touchTapCloseDelay={200}
          useLayerForClickAway={false}
        >
          <MenuItem
            anchorOrigin={
              Object {
                "horizontal": "right",
                "vertical": "top",
              }
            }
            checked={false}
            desktop={false}
            disabled={false}
            focusState="none"
            insetChildren={false}
            onClick={[Function]}
            primaryText="Delete circle"
            targetOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
          />
          <MenuItem
            anchorOrigin={
              Object {
                "horizontal": "right",
                "vertical": "top",
              }
            }
            checked={false}
            desktop={false}
            disabled={false}
            focusState="none"
            insetChildren={false}
            onClick={undefined}
            primaryText="Circle settings"
            targetOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
          />
        </IconMenu>,
        "secondaryTextLines": 1,
        "style": Object {
          "backgroundColor": "#fff",
          "borderBottom": "1px solid rgba(0,0,0,0.12)",
          "height": "72px",
          "padding": "12px 0",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoDetectWindowHeight": true,
          "autoScrollBodyContent": false,
          "children": <div>
            <TextField
              disabled={false}
              floatingLabelFixed={false}
              floatingLabelText="Circle name"
              fullWidth={false}
              hintText="Circle name"
              multiLine={false}
              onChange={[Function]}
              rows={1}
              type="text"
              underlineShow={true}
              value="friend"
            />
          </div>,
          "contentStyle": Object {
            "maxWidth": "400px",
          },
          "id": undefined,
          "modal": false,
          "onRequestClose": undefined,
          "open": true,
          "overlayStyle": Object {
            "background": "rgba(0,0,0,0.12)",
          },
          "repositionOnUpdate": true,
          "title": <div>
            <div
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <NavigationClose
                  hoverColor="#bdbdbd"
                  onClick={undefined}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                />
              </div>
              <div
                style={
                  Object {
                    "color": "rgba(0,0,0,0.87)",
                    "flex": "1 1",
                    "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                  }
                }
              >
                Circle settings
              </div>
              <div
                style={
                  Object {
                    "marginTop": "-9px",
                  }
                }
              >
                <FlatButton
                  disabled={false}
                  fullWidth={false}
                  label="SAVE"
                  labelPosition="after"
                  labelStyle={Object {}}
                  onClick={[Function]}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onTouchStart={[Function]}
                  primary={true}
                  secondary={false}
                />
              </div>
            </div>
            <Divider
              inset={false}
            />
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <TextField
              disabled={false}
              floatingLabelFixed={false}
              floatingLabelText="Circle name"
              fullWidth={false}
              hintText="Circle name"
              multiLine={false}
              onChange={[Function]}
              rows={1}
              type="text"
              underlineShow={true}
              value="friend"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "disabled": false,
              "floatingLabelFixed": false,
              "floatingLabelText": "Circle name",
              "fullWidth": false,
              "hintText": "Circle name",
              "multiLine": false,
              "onChange": [Function],
              "rows": 1,
              "type": "text",
              "underlineShow": true,
              "value": "friend",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ListItem
          autoGenerateNestedIndicator={true}
          containerElement="span"
          disableKeyboardFocus={false}
          disabled={false}
          initiallyOpen={false}
          insetChildren={false}
          leftIcon={
            <ActionGroupWork
              style={
                Object {
                  "fill": "#bdbdbd",
                  "height": "40px",
                  "transform": "translate(0px, -9px)",
                  "width": "40px",
                }
              }
            />
          }
          nestedItems={Array []}
          nestedLevel={0}
          onClick={[Function]}
          onKeyboardFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onNestedListToggle={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          open={false}
          primaryText={
            <span
              style={
                Object {
                  "color": "rgba(0,0,0,0.87)",
                  "fontSize": "16px",
                  "marginRight": "8px",
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                }
              }
            >
              friend
            </span>
          }
          primaryTogglesNestedList={false}
          rightIconButton={
            <IconMenu
              anchorOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              animated={true}
              iconButtonElement={
                <IconButton
                  disableTouchRipple={false}
                  disabled={false}
                  iconStyle={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  tooltipPosition="bottom-center"
                  touch={true}
                >
                  <NavigationMoreVert
                    color="#bdbdbd"
                    viewBox="9 0 24 24"
                  />
                </IconButton>
              }
              multiple={false}
              onClick={[Function]}
              onItemTouchTap={[Function]}
              onKeyboardFocus={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onRequestChange={[Function]}
              open={null}
              style={
                Object {
                  "display": "block",
                  "position": "absolute",
                  "right": "12px",
                  "top": "0px",
                }
              }
              targetOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              touchTapCloseDelay={200}
              useLayerForClickAway={false}
            >
              <MenuItem
                anchorOrigin={
                  Object {
                    "horizontal": "right",
                    "vertical": "top",
                  }
                }
                checked={false}
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                onClick={[Function]}
                primaryText="Delete circle"
                targetOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
              />
              <MenuItem
                anchorOrigin={
                  Object {
                    "horizontal": "right",
                    "vertical": "top",
                  }
                }
                checked={false}
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                onClick={undefined}
                primaryText="Circle settings"
                targetOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
              />
            </IconMenu>
          }
          secondaryTextLines={1}
          style={
            Object {
              "backgroundColor": "#fff",
              "borderBottom": "1px solid rgba(0,0,0,0.12)",
              "height": "72px",
              "padding": "12px 0",
            }
          }
        >
          <Dialog
            autoDetectWindowHeight={true}
            autoScrollBodyContent={false}
            contentStyle={
              Object {
                "maxWidth": "400px",
              }
            }
            id={undefined}
            modal={false}
            onRequestClose={undefined}
            open={true}
            overlayStyle={
              Object {
                "background": "rgba(0,0,0,0.12)",
              }
            }
            repositionOnUpdate={true}
            title={
              <div>
                <div
                  style={
                    Object {
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "paddingRight": "10px",
                      }
                    }
                  >
                    <NavigationClose
                      hoverColor="#bdbdbd"
                      onClick={undefined}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    />
                  </div>
                  <div
                    style={
                      Object {
                        "color": "rgba(0,0,0,0.87)",
                        "flex": "1 1",
                        "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                      }
                    }
                  >
                    Circle settings
                  </div>
                  <div
                    style={
                      Object {
                        "marginTop": "-9px",
                      }
                    }
                  >
                    <FlatButton
                      disabled={false}
                      fullWidth={false}
                      label="SAVE"
                      labelPosition="after"
                      labelStyle={Object {}}
                      onClick={[Function]}
                      onKeyboardFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      primary={true}
                      secondary={false}
                    />
                  </div>
                </div>
                <Divider
                  inset={false}
                />
              </div>
            }
          >
            <div>
              <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="Circle name"
                fullWidth={false}
                hintText="Circle name"
                multiLine={false}
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value="friend"
              />
            </div>
          </Dialog>
        </ListItem>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoGenerateNestedIndicator": true,
          "children": <Dialog
            autoDetectWindowHeight={true}
            autoScrollBodyContent={false}
            contentStyle={
              Object {
                "maxWidth": "400px",
              }
            }
            id={undefined}
            modal={false}
            onRequestClose={undefined}
            open={true}
            overlayStyle={
              Object {
                "background": "rgba(0,0,0,0.12)",
              }
            }
            repositionOnUpdate={true}
            title={
              <div>
                <div
                  style={
                    Object {
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "paddingRight": "10px",
                      }
                    }
                  >
                    <NavigationClose
                      hoverColor="#bdbdbd"
                      onClick={undefined}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    />
                  </div>
                  <div
                    style={
                      Object {
                        "color": "rgba(0,0,0,0.87)",
                        "flex": "1 1",
                        "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                      }
                    }
                  >
                    Circle settings
                  </div>
                  <div
                    style={
                      Object {
                        "marginTop": "-9px",
                      }
                    }
                  >
                    <FlatButton
                      disabled={false}
                      fullWidth={false}
                      label="SAVE"
                      labelPosition="after"
                      labelStyle={Object {}}
                      onClick={[Function]}
                      onKeyboardFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      primary={true}
                      secondary={false}
                    />
                  </div>
                </div>
                <Divider
                  inset={false}
                />
              </div>
            }
          >
            <div>
              <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="Circle name"
                fullWidth={false}
                hintText="Circle name"
                multiLine={false}
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value="friend"
              />
            </div>
          </Dialog>,
          "containerElement": "span",
          "disableKeyboardFocus": false,
          "disabled": false,
          "initiallyOpen": false,
          "insetChildren": false,
          "leftIcon": <ActionGroupWork
            style={
              Object {
                "fill": "#bdbdbd",
                "height": "40px",
                "transform": "translate(0px, -9px)",
                "width": "40px",
              }
            }
          />,
          "nestedItems": Array [],
          "nestedLevel": 0,
          "onClick": [Function],
          "onKeyboardFocus": [Function],
          "onMouseEnter": [Function],
          "onMouseLeave": [Function],
          "onNestedListToggle": [Function],
          "onTouchEnd": [Function],
          "onTouchStart": [Function],
          "open": false,
          "primaryText": <span
            style={
              Object {
                "color": "rgba(0,0,0,0.87)",
                "fontSize": "16px",
                "marginRight": "8px",
                "overflow": "hidden",
                "textOverflow": "ellipsis",
                "whiteSpace": "nowrap",
              }
            }
          >
            friend
          </span>,
          "primaryTogglesNestedList": false,
          "rightIconButton": <IconMenu
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            animated={true}
            iconButtonElement={
              <IconButton
                disableTouchRipple={false}
                disabled={false}
                iconStyle={
                  Object {
                    "height": 24,
                    "width": 24,
                  }
                }
                style={
                  Object {
                    "height": 24,
                    "width": 24,
                  }
                }
                tooltipPosition="bottom-center"
                touch={true}
              >
                <NavigationMoreVert
                  color="#bdbdbd"
                  viewBox="9 0 24 24"
                />
              </IconButton>
            }
            multiple={false}
            onClick={[Function]}
            onItemTouchTap={[Function]}
            onKeyboardFocus={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onRequestChange={[Function]}
            open={null}
            style={
              Object {
                "display": "block",
                "position": "absolute",
                "right": "12px",
                "top": "0px",
              }
            }
            targetOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            touchTapCloseDelay={200}
            useLayerForClickAway={false}
          >
            <MenuItem
              anchorOrigin={
                Object {
                  "horizontal": "right",
                  "vertical": "top",
                }
              }
              checked={false}
              desktop={false}
              disabled={false}
              focusState="none"
              insetChildren={false}
              onClick={[Function]}
              primaryText="Delete circle"
              targetOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
            />
            <MenuItem
              anchorOrigin={
                Object {
                  "horizontal": "right",
                  "vertical": "top",
                }
              }
              checked={false}
              desktop={false}
              disabled={false}
              focusState="none"
              insetChildren={false}
              onClick={undefined}
              primaryText="Circle settings"
              targetOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
            />
          </IconMenu>,
          "secondaryTextLines": 1,
          "style": Object {
            "backgroundColor": "#fff",
            "borderBottom": "1px solid rgba(0,0,0,0.12)",
            "height": "72px",
            "padding": "12px 0",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoDetectWindowHeight": true,
            "autoScrollBodyContent": false,
            "children": <div>
              <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="Circle name"
                fullWidth={false}
                hintText="Circle name"
                multiLine={false}
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value="friend"
              />
            </div>,
            "contentStyle": Object {
              "maxWidth": "400px",
            },
            "id": undefined,
            "modal": false,
            "onRequestClose": undefined,
            "open": true,
            "overlayStyle": Object {
              "background": "rgba(0,0,0,0.12)",
            },
            "repositionOnUpdate": true,
            "title": <div>
              <div
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <NavigationClose
                    hoverColor="#bdbdbd"
                    onClick={undefined}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  />
                </div>
                <div
                  style={
                    Object {
                      "color": "rgba(0,0,0,0.87)",
                      "flex": "1 1",
                      "font": "500 20px Roboto,RobotoDraft,Helvetica,Arial,sans-serif",
                    }
                  }
                >
                  Circle settings
                </div>
                <div
                  style={
                    Object {
                      "marginTop": "-9px",
                    }
                  }
                >
                  <FlatButton
                    disabled={false}
                    fullWidth={false}
                    label="SAVE"
                    labelPosition="after"
                    labelStyle={Object {}}
                    onClick={[Function]}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    primary={true}
                    secondary={false}
                  />
                </div>
              </div>
              <Divider
                inset={false}
              />
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="Circle name"
                fullWidth={false}
                hintText="Circle name"
                multiLine={false}
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value="friend"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": false,
                "floatingLabelFixed": false,
                "floatingLabelText": "Circle name",
                "fullWidth": false,
                "hintText": "Circle name",
                "multiLine": false,
                "onChange": [Function],
                "rows": 1,
                "type": "text",
                "underlineShow": true,
                "value": "friend",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
